[{"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\index.js":"1","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\App.js":"2","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\reportWebVitals.js":"3","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart1.js":"4","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Home.js":"5","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Corr.js":"6","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart3.js":"7","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart4.js":"8","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart5.js":"9","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart2.js":"10","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\Analysis.js":"11","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\Report.js":"12","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\FlagReport\\FlagReport.js":"13","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\Rawdata\\RawMdcMessages.js":"14","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\Conditions.js":"15","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\Selectors.js":"16","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\HistoryReport\\HistoryReport.js":"17","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\DailyReport\\DailyReport.js":"18","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\DatePicker.js":"19","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\Rawdata\\RawDataTable.js":"20","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\AnalysisInput.js":"21","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Correlation\\Correlation.js":"22","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Correlation\\PMTable.js":"23","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Correlation\\CorrelationSubTable.js":"24","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Stacked.js":"25","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Scatter1.js":"26"},{"size":517,"mtime":1616429854388,"results":"27","hashOfConfig":"28"},{"size":17648,"mtime":1617600627540,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1616429854431,"results":"30","hashOfConfig":"28"},{"size":5570,"mtime":1617762501011,"results":"31","hashOfConfig":"28"},{"size":4299,"mtime":1617767218742,"results":"32","hashOfConfig":"28"},{"size":135,"mtime":1616429854554,"results":"33","hashOfConfig":"28"},{"size":6065,"mtime":1617602382741,"results":"34","hashOfConfig":"28"},{"size":5557,"mtime":1616647565826,"results":"35","hashOfConfig":"28"},{"size":6147,"mtime":1617602515673,"results":"36","hashOfConfig":"28"},{"size":5460,"mtime":1617602239974,"results":"37","hashOfConfig":"28"},{"size":423,"mtime":1616429854663,"results":"38","hashOfConfig":"28"},{"size":7799,"mtime":1617603372633,"results":"39","hashOfConfig":"28"},{"size":5349,"mtime":1617603372632,"results":"40","hashOfConfig":"28"},{"size":5650,"mtime":1617214483000,"results":"41","hashOfConfig":"28"},{"size":7826,"mtime":1617603372632,"results":"42","hashOfConfig":"28"},{"size":5524,"mtime":1617214482996,"results":"43","hashOfConfig":"28"},{"size":8053,"mtime":1617214482998,"results":"44","hashOfConfig":"28"},{"size":7084,"mtime":1617214482997,"results":"45","hashOfConfig":"28"},{"size":1377,"mtime":1616429854712,"results":"46","hashOfConfig":"28"},{"size":7632,"mtime":1617214482999,"results":"47","hashOfConfig":"28"},{"size":2889,"mtime":1616429854677,"results":"48","hashOfConfig":"28"},{"size":420,"mtime":1617214482994,"results":"49","hashOfConfig":"28"},{"size":11838,"mtime":1617603372631,"results":"50","hashOfConfig":"28"},{"size":7908,"mtime":1617214482994,"results":"51","hashOfConfig":"28"},{"size":5950,"mtime":1617761320382,"results":"52","hashOfConfig":"28"},{"size":5867,"mtime":1617635374104,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"cdai04",{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"120","usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123","usedDeprecatedRules":"56"},"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\index.js",[],["124","125"],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\App.js",["126","127","128","129","130","131","132","133"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\r\nimport EqualizerSharpIcon from '@material-ui/icons/EqualizerSharp';\r\nimport ShowChartSharpIcon from '@material-ui/icons/ShowChartSharp';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableChartSharpIcon from '@material-ui/icons/TableChartSharp';\r\nimport AssessmentSharpIcon from '@material-ui/icons/AssessmentSharp';\r\nimport mhirjLogoColored from './mhirjLogoColored.svg';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport TocSharpIcon from '@material-ui/icons/TocSharp';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Home from './Components/Home';\r\n// import MDC from './Components/MDC';\r\n// import PM from './Components/PM';\r\nimport Corr from './Components/Corr';\r\nimport Chart1 from './Components/Chart1';\r\nimport Chart2 from './Components/Chart2';\r\nimport Chart3 from './Components/Chart3';\r\nimport Chart4 from './Components/Chart4';\r\nimport Chart5 from './Components/Chart5';\r\nimport Scatter1 from './Components/Scatter1';\r\nimport Stacked from './Components/Stacked';\r\nimport Analysis from './Components/MdcMessages/GenerateReport/Analysis';\r\nimport Report from './Components/MdcMessages/Reports/Report';\r\nimport Correlation from './Components/Correlation/Correlation';\r\nimport FlagReport from './Components/MdcMessages/Reports/FlagReport/FlagReport';\r\n// import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport TimelineSharpIcon from '@material-ui/icons/TimelineSharp';\r\nimport Rawdata from './Components/MdcMessages/Reports/Rawdata/RawMdcMessages';\r\nimport TrendingUpSharpIcon from '@material-ui/icons/TrendingUpSharp';\r\n\r\nconst drawerWidth = 300;\r\n\r\n// const theme = createMuiTheme({\r\n//     palette: {\r\n//       primary: {\r\n//         main: \"#044269\",\r\n//         light: \"#416d97\",\r\n//         dark: \"#001c3e\",\r\n//       },\r\n//       secondary: {\r\n//         main: \"#c5d3e0\",\r\n//         light: \"#d8e4f0\",\r\n//       },\r\n//       default: {\r\n//         light: \"#f3f2f1\",\r\n//         main: \"#e0e0e0\",\r\n//         dark: \"#92A0AD\",\r\n//       },\r\n//       success: {\r\n//         main: \"#044269\",\r\n//       },\r\n//       text: {\r\n//         primary: \"#272727\",\r\n//         secondary: \"#757575\",\r\n//         title1: \"#044269\",\r\n//         title2: \"#2c3942\",\r\n//       },\r\n//       background: {\r\n//         tabContent: \"#f3f2f1\",\r\n//       },\r\n//       typography: {\r\n//       useNextVariants: true,\r\n//     },\r\n//   }\r\n// });\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n      \r\n    }),\r\n    backgroundColor: \"#c5d3e0\",\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: \"#c5d3e0\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    color: \"#001c3e\",\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n    \r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    \r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: \"#c5d3e0\",\r\n    \r\n    \r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(9) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(8) + 1,\r\n    },\r\n    backgroundColor: \"#c5d3e0\",\r\n   \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    height: \"78px\",\r\n    backgroundColor: \"#f3f2f1\",\r\n    \r\n    \r\n  },\r\n  content: {\r\n    flexGrow: -1,\r\n   padding: theme.spacing(0),\r\n    \r\n  },\r\n  tabContent: {\r\n    width: \"100%\",\r\n    padding: \"15px 5px 15px 20px\",\r\n  \r\n    \r\n  },\r\n  icon: {\r\n    paddingRight: \"10px\",\r\n    width: \"30px\",\r\n    height: \"50px\",\r\n    color:\"#001c3e\",\r\n  \r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n    color: \"#272727\", \r\n    \r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  nested_1: {\r\n  \r\n      paddingLeft: theme.spacing(4),\r\n    \r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [page, setPage] = React.useState(\"main\");\r\n  const [openMDC, setOpenMDC] = React.useState(false);\r\n  const [openMAIN, setOpenMAIN] = React.useState(false);\r\n  const [openGraphs, setOpenGraphs] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOnClick = (page) => {\r\n    \r\n    setPage(page);\r\n\r\n  };\r\n  const handleClick = () => {\r\n    setOpenMDC(!openMDC);\r\n  };\r\n  const handleMainClick = () => {\r\n    setOpenMAIN(!openMAIN);\r\n  };\r\n  const handleGraphsClick = () => {\r\n    setOpenGraphs(!openGraphs);\r\n  };\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Router>\r\n      <CssBaseline />\r\n      <AppBar\r\n        color=\"primary\"\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={mhirjLogoColored} style={{ height: 78, width: 150 }} />\r\n          <typography style={{color:\"#001c3e\", fontSize:\"24px\", fontFamily:\"Times New Roman\"}}>MDC Trend Analysis Tool</typography>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon style={{ color:\"#001c3e\"}} /> : <ChevronLeftIcon style={{ color:\"#001c3e\"}} />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n            \r\n              <ListItem button onClick={handleMainClick} disablePadding>\r\n              <Link to=\"/\" style={{ textDecoration: 'none'}}> \r\n                <ListItemIcon>\r\n                  <InfoSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon> \r\n                <Button variant=\"contained\" color=\"#92A0AD\">\r\n                 <typography>Main</typography>\r\n                 {openMAIN ? <ExpandLess /> : <ExpandMore />}\r\n                </Button>\r\n              </Link>\r\n            </ListItem> \r\n            <Collapse in={openMAIN} timeout=\"auto\" unmountOnExit>\r\n\r\n            <List component=\"div\" disablePadding>\r\n            <Link to=\"/Scatter1\" style={{ textDecoration: 'none'}}>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <TrendingUpSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"SCATTER\" style={{color:\"#001c3e\"}}/>\r\n              </ListItem>\r\n              </Link>\r\n            </List>\r\n\r\n            <List component=\"div\" disablePadding>\r\n            <Link to=\"/Stacked\" style={{ textDecoration: 'none'}}>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <TrendingUpSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"STACKED\" style={{color:\"#001c3e\"}}/>\r\n              </ListItem>\r\n              </Link>\r\n            </List>\r\n            </Collapse>\r\n          \r\n            \r\n            <ListItem button onClick={handleClick} disablePadding>\r\n            <ListItemIcon>\r\n               <TableChartSharpIcon style={{ color:\"#001c3e\"}} />\r\n            </ListItemIcon>\r\n            <Button variant=\"contained\" color=\"#001c3e\">\r\n            <typography>MDC</typography> \r\n            {openMDC ? <ExpandLess /> : <ExpandMore />}\r\n            </Button>\r\n            </ListItem>\r\n           \r\n\r\n\r\n            <Collapse in={openMDC} timeout=\"auto\" unmountOnExit>\r\n            \r\n            <List component=\"div\" disablePadding>\r\n            <Link to=\"/analysis\" style={{ textDecoration: 'none'}}>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <TrendingUpSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"ANALYSIS\" style={{color:\"#001c3e\"}}/>\r\n              </ListItem>\r\n              </Link>\r\n            </List>\r\n            \r\n\r\n            <List component=\"div\" disablePadding>\r\n            \r\n              <ListItem button className={classes.nested} button onClick={handleGraphsClick}>\r\n                <ListItemIcon>\r\n                  <TimelineSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon>\r\n                <Button color=\"#001c3e\" style={{fontSize: \"16px\"}}>\r\n                <typography>Graphs </typography>\r\n                {openGraphs ? <ExpandLess /> : <ExpandMore />}\r\n                </Button>\r\n              </ListItem>\r\n\r\n              <Collapse in={openGraphs} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding>\r\n                      <Link to=\"/Chart1\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button className={classes.nested_1}>\r\n                          <ListItemIcon>\r\n                            <EqualizerSharpIcon style={{ color: \"#001c3e\" }} />\r\n                          </ListItemIcon>\r\n                          <ListItemText primary=\"Message Occurence for AC\" style={{ color: \"#001c3e\" }} />\r\n                        </ListItem>\r\n                      </Link>\r\n                    </List>\r\n\r\n                    <List component=\"div\" disablePadding>\r\n                      <Link to=\"/Chart2\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button className={classes.nested_1}>\r\n                          <ListItemIcon>\r\n                            <EqualizerSharpIcon style={{ color: \"#001c3e\" }} />\r\n                          </ListItemIcon>\r\n                          <ListItemText primary=\"Top AC by ATA\" style={{ color: \"#001c3e\" }} />\r\n                        </ListItem>\r\n                      </Link>\r\n                    </List>\r\n\r\n                    <List component=\"div\" disablePadding>\r\n                      <Link to=\"/Chart3\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button className={classes.nested_1}>\r\n                          <ListItemIcon>\r\n                            <ShowChartSharpIcon style={{ color: \"#001c3e\" }} />\r\n                          </ListItemIcon>\r\n                          <ListItemText primary=\"Message Trends for AC\" style={{ color: \"#001c3e\" }} />\r\n                        </ListItem>\r\n                      </Link>\r\n                    </List>\r\n\r\n                    {/* <List component=\"div\" disablePadding>\r\n                      <Link to=\"/Chart4\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button className={classes.nested_1}>\r\n                          <ListItemIcon>\r\n                            <ShowChartSharpIcon style={{ color: \"#001c3e\" }} />\r\n                          </ListItemIcon>\r\n                          <ListItemText primary=\"Top ATA in Reports\" style={{ color: \"#001c3e\" }} />\r\n                        </ListItem>\r\n                      </Link>\r\n                    </List> */}\r\n\r\n                    <List component=\"div\" disablePadding>\r\n                      <Link to=\"/Chart5\" style={{ textDecoration: 'none' }}>\r\n                        <ListItem button className={classes.nested_1}>\r\n                          <ListItemIcon>\r\n                          <ShowChartSharpIcon style={{ color: \"#001c3e\" }} />\r\n                          </ListItemIcon>\r\n                          <ListItemText primary=\"Intermittence Trend for AC\" style={{ color: \"#001c3e\" }} />\r\n                        </ListItem>\r\n                      </Link>\r\n                    </List>\r\n              </Collapse>\r\n            </List>\r\n           \r\n           \r\n            <List component=\"div\" disablePadding>\r\n            <Link to=\"/rawdata\" style={{ textDecoration: 'none'}}> \r\n                <ListItem button className={classes.nested}>\r\n                <ListItemIcon>\r\n                  <TocSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"RAW DATA\"  style={{color:\"#001c3e\"}}/>\r\n              </ListItem>\r\n              </Link>\r\n            </List>\r\n\r\n          </Collapse>\r\n\r\n          \r\n            \r\n            \r\n          \r\n            \r\n            \r\n              {/* <ListItem>\r\n              <Link to=\"/mdc\" style={{ textDecoration: 'none' }}>\r\n                <ListItemIcon>\r\n                <TableChartSharpIcon style={{ color:\"#001c3e\"}} />\r\n                </ListItemIcon>\r\n                <Button variant=\"contained\" color=\"#001c3e\" open={open} onClick={handleClick}>\r\n                 MDC Messages\r\n                </Button>\r\n                <ListItem>\r\n                </ListItem>\r\n                </Link>\r\n                </ListItem> */}\r\n\r\n                \r\n            \r\n            \r\n              {/* <ListItem>\r\n              <Link to=\"/pm\" style={{ textDecoration: 'none' }}>\r\n                <ListItemIcon>\r\n                <TableChartSharpIcon style={{ color:\"#001c3e\"}}/>\r\n                </ListItemIcon>\r\n                <Button variant=\"contained\" color=\"#d8e4f0\">\r\n                PM Messages\r\n                </Button>\r\n                </Link>\r\n                </ListItem> */}\r\n            \r\n            \r\n              <ListItem >\r\n              <Link to=\"/corr\" style={{ textDecoration: 'none' }}>\r\n                <ListItemIcon>\r\n                <AssessmentSharpIcon style={{ color:\"#001c3e\"}}/>\r\n                </ListItemIcon>\r\n                <Button variant=\"contained\" color=\"#d8e4f0\">\r\n                <typography>Correlation</typography>\r\n                </Button>\r\n                </Link>\r\n                </ListItem>\r\n          \r\n        </List>\r\n        <Divider />\r\n        \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/Scatter1\">\r\n            <Scatter1 />\r\n          </Route>\r\n          <Route path=\"/rawdata\">\r\n            <Rawdata />\r\n          </Route>\r\n          {/* <Route path=\"/graphs\">\r\n            <Graphs />\r\n          </Route> */}\r\n\r\n          <Route path=\"/Chart1\">\r\n            <Chart1 />\r\n          </Route>\r\n\r\n          <Route path=\"/Chart2\">\r\n            <Chart2 />\r\n          </Route>\r\n\r\n          <Route path=\"/Chart3\">\r\n            <Chart3 />\r\n          </Route>\r\n\r\n          <Route path=\"/Chart4\">\r\n            <Chart4 />\r\n          </Route>\r\n\r\n          <Route path=\"/Chart5\">\r\n            <Chart5 />\r\n          </Route>\r\n\r\n          <Route path=\"/analysis\">\r\n            <Analysis />\r\n          </Route>\r\n          <Route path=\"/report\">\r\n            <Report />\r\n          </Route>\r\n          <Route path=\"/flag\">\r\n            <FlagReport />\r\n          </Route>\r\n          {/* <Route path=\"/pm\">\r\n            <PM />\r\n          </Route> */}\r\n          <Route path=\"/corr\">\r\n            <Correlation />\r\n          </Route>\r\n        </Switch>  \r\n      </main>\r\n      \r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\reportWebVitals.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart1.js",["134","135","136","137"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(120),\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function Chart1() {\r\n  const classes = useStyles();\r\n  const ChartJsImage = require('chartjs-to-image');\r\n  const [chartData1, setChartData1] = useState({});\r\n\r\n \r\n \r\n  const [data_chart1, setData_chart1] = useState({\r\n    aircraft_no:\"\",\r\n    top_value:\"\",\r\n    from_date:\"\",\r\n    to_date:\"\"\r\n  });\r\n\r\n function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart1');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart1.png\")\r\n    })\r\n}\r\n\r\n\r\n  function submit(e){\r\n    e.preventDefault();\r\n    let msgName = [];\r\n    let messageOcc = [];\r\n\r\n    const path='http://localhost:8000/chart_one/' +data_chart1.top_value+ '/' +data_chart1.aircraft_no+ '/' +data_chart1.from_date+ '/' +data_chart1.to_date;\r\n    \r\n    axios.post(path)\r\n      .then(res => {\r\n        console.log(res,\"response\");\r\n        \r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          msgName.push(dataObj.Equation_ID +\"\\n\"+ dataObj.ATA +\"\\n\"+ dataObj.LRU);\r\n          messageOcc.push(parseInt(dataObj.total_message));\r\n        }\r\n        setChartData1({\r\n          labels: msgName,\r\n          datasets: [\r\n            {\r\n              label: data_chart1.aircraft_no,\r\n              data: messageOcc,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 2,\r\n              borderColor: \"black\"\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n    //console.log(msgName, messageOcc);\r\n  }\r\n  function handle(e){\r\n    const newdata={...data_chart1}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart1(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={12}>\r\n      <Grid item xs={12}>\r\n          <form  className={classes.root1}>\r\n            <div><h1 style={{color:\"#001C3E\"}}>MESSAGE OCCURENCE FOR AIRCRAFT</h1></div>  \r\n            <div> <TextField onChange= {(e)=>handle(e)} id=\"aircraft_no\" value={data_chart1.aircraft_no} label=\"Aicraft to study\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle(e)} id=\"top_value\" value={data_chart1.top_value} label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div>  <TextField onChange= {(e)=>handle(e)} id=\"from_date\" value={data_chart1.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{shrink: true, }} />\r\n              <TextField onChange= {(e)=>handle(e)} id=\"to_date\" value={data_chart1.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true,  }} /></div>\r\n            <br></br>\r\n            <div  style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit(e)} variant=\"contained\" style={{backgroundColor:\"#001C3E\", color:\"WHITE\"}}>GENERATE  </Button>\r\n            <Button onClick={(e) => save(e)}  variant=\"contained\"style={{backgroundColor:\"#001C3E\", color:\"WHITE\",float:'right', marginRight:\"1200px\"}}>SAVE</Button></div>\r\n          </form>\r\n          <Paper className={classes.paper}>\r\n          <HorizontalBar\r\n            id=\"chart1\"\r\n            data={chartData1}\r\n            options={{\r\n              // indexAxis: \"y\",\r\n              title: {\r\n                display: true,\r\n                text: 'Message occurance in '+data_chart1.aircraft_no,\r\n                fontSize: 20\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      autoSkip: true,\r\n                      // maxTicksLimit: 10,\r\n                      beginAtZero: false\r\n                    },\r\n                    \r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                    \r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                     \r\n                      beginAtZero: true\r\n                    },\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Total Number of Messages',\r\n                          fontStyle: 'bold',\r\n                          fontColor: '#001C3E'\r\n                        \r\n                    },\r\n                    gridLines: {\r\n                      display: false\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: 'right'\r\n              }\r\n            }}\r\n          />\r\n          </Paper>\r\n        </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Home.js",["138","139"],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Corr.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart3.js",["140","141","142","143"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(150),\r\n  },\r\n\r\n}));\r\n\r\nexport default function Chart3() {\r\n  const classes = useStyles();\r\n\r\n  const [chartData3, setChartData3] = useState({});\r\n\r\n\r\n  const [data_chart3, setData_chart3] = useState({\r\n    aircraft_no:\"\",\r\n    equation_id:\"\",\r\n    flight_phase:\"\",\r\n    from_date:\"\",\r\n    to_date:\"\"\r\n  });\r\n\r\n \r\n  function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart3');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart3.png\")\r\n    })\r\n}\r\n  \r\n\r\n\r\n  function submit_chart3(e){\r\n    e.preventDefault();\r\n    let Dates = [];\r\n    let OccperDay = [];\r\n    \r\n    \r\n    const path='http://localhost:8000/chart_three/' +data_chart3.aircraft_no+ '/' +data_chart3.equation_id+ '/'+data_chart3.flight_phase+ '/' +data_chart3.from_date+ '/' +data_chart3.to_date;\r\n    axios.post(path)\r\n      .then(res => {\r\n        //console.log(res,\"response\");\r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          Dates.push(dataObj.Dates);\r\n          OccperDay.push(parseInt(dataObj.OccurencesPerDay));\r\n        }\r\n        setChartData3({\r\n          labels: Dates,\r\n          datasets: [\r\n            {\r\n              label: data_chart3.aircraft_no,\r\n              data: OccperDay,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 1,\r\n              borderColor: \"black\"\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  function handle_chart3(e){\r\n    const newdata={...data_chart3}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart3(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n\r\n          <form className={classes.root1} noValidate autoComplete=\"off\">\r\n          <div><h1 style={{color:\"#001C3E\"}}>MESSAGE TREND FOR AIRCRAFT BY DAY</h1></div>   \r\n            <div> <TextField onChange= {(e)=>handle_chart3(e)} id=\"aircraft_no\" value={data_chart3.aircraft_no} label=\"Aircraft No\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart3(e)} id=\"equation_id\" value={data_chart3.equation_id} label=\"Equation ID\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart3(e)} id=\"flight_phase\" value={data_chart3.flight_phase} label=\"Flight Phase Enabled\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div>  <TextField onChange= {(e)=>handle_chart3(e)} id=\"from_date\" value={data_chart3.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{shrink: true, }} />\r\n              <TextField onChange= {(e)=>handle_chart3(e)} id=\"to_date\" value={data_chart3.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true,  }} /></div>\r\n            <br></br>\r\n            <div  style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart3(e)} variant=\"contained\" style={{backgroundColor:\"#001C3E\", color:\"WHITE\"}}>GENERATE  </Button>\r\n            <Button onClick={(e) => save(e)}  variant=\"contained\"style={{backgroundColor:\"#001C3E\", color:\"WHITE\",float:'right', marginRight:\"1200px\"}}>SAVE</Button></div>\r\n          </form>\r\n\r\n          <Paper className={classes.paper}>\r\n            <Line\r\n            id=\"chart3\"\r\n            data={chartData3}\r\n            options={{\r\n              // indexAxis: \"y\",\r\n              title: {\r\n                display: true,\r\n                text: 'Date Trend for ' +data_chart3.aircraft_no+ ' and message '+data_chart3.equation_id,\r\n                fontSize: 20\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      autoSkip: false,\r\n                      // maxTicksLimit: 10,\r\n                      beginAtZero: true\r\n                    },\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Occurence Per Day',\r\n                          fontStyle: 'bold',\r\n                          fontColor: '#001C3E'\r\n                        \r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                    \r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true\r\n                    },\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Occurence Dates',\r\n                          fontStyle: 'bold',\r\n                          fontColor: '#001C3E'\r\n                        \r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              legend: {\r\n                display: false,\r\n                position: 'right'\r\n              }\r\n            }}\r\n          />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart4.js",["144","145","146","147"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(150),\r\n  },\r\n\r\n}));\r\n\r\nexport default function Chart5() {\r\n  const classes = useStyles();\r\n\r\n  const [chartData5, setChartData5] = useState({});\r\n\r\n\r\n  const [data_chart5, setData_chart5] = useState({\r\n    aircraft_no:\"\",\r\n    equation_id:\"\",\r\n    flight_phase:\"\",\r\n    from_date:\"\",\r\n    to_date:\"\"\r\n  });\r\n\r\n \r\n  function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart5');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart5.png\")\r\n    })\r\n}\r\n  \r\n\r\n\r\n  function submit_chart5(e){\r\n    e.preventDefault();\r\n    let intermittence = [];\r\n    let flight_leg = [];\r\n    \r\n    \r\n    const path='http://localhost:8000/chart_five/' +data_chart5.aircraft_no+ '/' +data_chart5.equation_id+ '/'+data_chart5.flight_phase+ '/' +data_chart5.from_date+ '/' +data_chart5.to_date;\r\n    axios.post(path)\r\n      .then(res => {\r\n        //console.log(res,\"response\");\r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          intermittence.push(dataObj.OccurencesOfIntermittent);\r\n          flight_leg.push(parseInt(dataObj.Flight_Leg_No));\r\n        }\r\n        setChartData5({\r\n          labels: flight_leg,\r\n          datasets: [\r\n            {\r\n              //label: data_chart5.aircraft_no,\r\n              data: intermittence,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 1,\r\n              borderColor: \"black\"\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  function handle_chart5(e){\r\n    const newdata={...data_chart5}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart5(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n\r\n          <form className={classes.root1} noValidate autoComplete=\"off\">\r\n          <div><h1 style={{color:\"#001C3E\"}}>TOP ATA IN REPORTS</h1></div>   \r\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"aircraft_no\" value={data_chart5.aircraft_no} label=\"Aircraft No\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"equation_id\" value={data_chart5.equation_id} label=\"Equation ID\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"flight_phase\" value={data_chart5.flight_phase} label=\"Flight Phase Enabled\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div>  <TextField onChange= {(e)=>handle_chart5(e)} id=\"from_date\" value={data_chart5.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{shrink: true, }} />\r\n              <TextField onChange= {(e)=>handle_chart5(e)} id=\"to_date\" value={data_chart5.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true,  }} /></div>\r\n            <br></br>\r\n            <div  style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart5(e)} variant=\"contained\" style={{backgroundColor:\"#001C3E\", color:\"WHITE\"}}>GENERATE  </Button>\r\n            <Button onClick={(e) => save(e)}  variant=\"contained\"style={{backgroundColor:\"#001C3E\", color:\"WHITE\",float:'right', marginRight:\"1200px\"}}>SAVE</Button></div>\r\n          </form>\r\n\r\n          <Paper className={classes.paper}>\r\n            <Line\r\n            id=\"chart5\"\r\n            data={chartData5}\r\n            options={{\r\n              // indexAxis: \"y\",\r\n              title: {\r\n                display: true,\r\n                text: 'Intermittence Trend for ' +data_chart5.aircraft_no+ ' and message '+data_chart5.equation_id,\r\n                fontSize: 20\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      autoSkip: false,\r\n                      // maxTicksLimit: 10,\r\n                      beginAtZero: true\r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                    \r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true\r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              legend: {\r\n                display: false,\r\n                position: 'right'\r\n              }\r\n            }}\r\n          />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart5.js",["148","149","150","151"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(150),\r\n  },\r\n\r\n}));\r\n\r\nexport default function Chart5() {\r\n  const classes = useStyles();\r\n\r\n  const [chartData5, setChartData5] = useState({});\r\n\r\n\r\n  const [data_chart5, setData_chart5] = useState({\r\n    aircraft_no:\"\",\r\n    equation_id:\"\",\r\n    flight_phase:\"\",\r\n    from_date:\"\",\r\n    to_date:\"\"\r\n  });\r\n\r\n \r\n  function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart5');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart5.png\")\r\n    })\r\n}\r\n  \r\n\r\n\r\n  function submit_chart5(e){\r\n    e.preventDefault();\r\n    let intermittence = [];\r\n    let flight_leg = [];\r\n    \r\n    \r\n    const path='http://localhost:8000/chart_five/' +data_chart5.aircraft_no+ '/' +data_chart5.equation_id+ '/'+data_chart5.flight_phase+ '/' +data_chart5.from_date+ '/' +data_chart5.to_date;\r\n    axios.post(path)\r\n      .then(res => {\r\n        //console.log(res,\"response\");\r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          intermittence.push(dataObj.OccurencesOfIntermittent);\r\n          flight_leg.push(parseInt(dataObj.Flight_Leg_No));\r\n        }\r\n        setChartData5({\r\n          labels: flight_leg,\r\n          datasets: [\r\n            {\r\n              //label: data_chart5.aircraft_no,\r\n              data: intermittence,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 1,\r\n              borderColor: \"black\"\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  function handle_chart5(e){\r\n    const newdata={...data_chart5}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart5(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n\r\n          <form className={classes.root1} noValidate autoComplete=\"off\">\r\n          <div><h1 style={{color:\"#001C3E\"}}>INTERMITTENCE FLIGHT LEG TREND FOR AIRCRAFT</h1></div>   \r\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"aircraft_no\" value={data_chart5.aircraft_no} label=\"Aircraft No\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"equation_id\" value={data_chart5.equation_id} label=\"Equation ID\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"flight_phase\" value={data_chart5.flight_phase} label=\"Flight Phase Enabled\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div>  <TextField onChange= {(e)=>handle_chart5(e)} id=\"from_date\" value={data_chart5.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{shrink: true, }} />\r\n              <TextField onChange= {(e)=>handle_chart5(e)} id=\"to_date\" value={data_chart5.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true,  }} /></div>\r\n            <br></br>\r\n            <div  style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart5(e)} variant=\"contained\" style={{backgroundColor:\"#001C3E\", color:\"WHITE\"}}>GENERATE  </Button>\r\n            <Button onClick={(e) => save(e)}  variant=\"contained\"style={{backgroundColor:\"#001C3E\", color:\"WHITE\",float:'right', marginRight:\"1200px\"}}>SAVE</Button></div>\r\n          </form>\r\n\r\n          <Paper className={classes.paper}>\r\n            <Line\r\n            id=\"chart5\"\r\n            data={chartData5}\r\n            options={{\r\n              // indexAxis: \"y\",\r\n              title: {\r\n                display: true,\r\n                text: 'Intermittence Trend for ' +data_chart5.aircraft_no+ ' and message '+data_chart5.equation_id,\r\n                fontSize: 20\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      autoSkip: false,\r\n                      // maxTicksLimit: 10,\r\n                      beginAtZero: true\r\n                    },\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Intermittence',\r\n                          fontStyle: 'bold',\r\n                          fontColor: '#001C3E'\r\n                        \r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                    \r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true\r\n                    },\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Flight Leg',\r\n                          fontStyle: 'bold',\r\n                          fontColor: '#001C3E'\r\n                          \r\n                        \r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              legend: {\r\n                display: false,\r\n                position: 'right'\r\n              }\r\n            }}\r\n          />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Chart2.js",["152","153","154","155"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(150),\r\n  },\r\n\r\n}));\r\n\r\nexport default function Chart2() {\r\n  const classes = useStyles();\r\n\r\n  const [chartData2, setChartData2] = useState({});\r\n\r\n\r\n  const [data_chart2, setData_chart2] = useState({\r\n    ata:\"\",\r\n    top_value:\"\",\r\n    from_date:\"\",\r\n    to_date:\"\"\r\n  });\r\n\r\n \r\n  function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart2');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart2.png\")\r\n    })\r\n}\r\n  \r\n\r\n\r\n  function submit_chart2(e){\r\n    e.preventDefault();\r\n    let aircraft_no = [];\r\n    let ataOcc = [];\r\n    \r\n    \r\n    const path='http://localhost:8000/chart_two/' +data_chart2.top_value+ '/' +data_chart2.ata+ '/' +data_chart2.from_date+ '/' +data_chart2.to_date;\r\n    axios.post(path)\r\n      .then(res => {\r\n        //console.log(res,\"response\");\r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          aircraft_no.push(dataObj.aircraft);\r\n          ataOcc.push(parseInt(dataObj.ataOcc));\r\n        }\r\n        setChartData2({\r\n          labels: aircraft_no,\r\n          datasets: [\r\n            {\r\n              label: data_chart2.ata,\r\n              data: ataOcc,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 1,\r\n              borderColor: \"black\"\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  function handle_chart2(e){\r\n    const newdata={...data_chart2}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart2(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n\r\n          <form className={classes.root1} noValidate autoComplete=\"off\">\r\n          <div><h1 style={{color:\"#001C3E\"}}>TOP AIRCRAFT BY ATA</h1></div>   \r\n            <div> <TextField onChange= {(e)=>handle_chart2(e)} id=\"ata\" value={data_chart2.ata} label=\"ATA\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div> <TextField onChange= {(e)=>handle_chart2(e)} id=\"top_value\" value={data_chart2.top_value} label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div>  <TextField onChange= {(e)=>handle_chart2(e)} id=\"from_date\" value={data_chart2.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{shrink: true, }} />\r\n              <TextField onChange= {(e)=>handle_chart2(e)} id=\"to_date\" value={data_chart2.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true,  }} /></div>\r\n            <br></br>\r\n            <div  style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart2(e)} variant=\"contained\" style={{backgroundColor:\"#001C3E\", color:\"WHITE\"}}>GENERATE  </Button>\r\n            <Button onClick={(e) => save(e)}  variant=\"contained\"style={{backgroundColor:\"#001C3E\", color:\"WHITE\",float:'right', marginRight:\"1200px\"}}>SAVE</Button></div>\r\n          </form>\r\n\r\n          <Paper className={classes.paper}>\r\n            <HorizontalBar\r\n            id=\"chart2\"\r\n            data={chartData2}\r\n            options={{\r\n              // indexAxis: \"y\",\r\n              title: {\r\n                display: true,\r\n                text: 'ATA ' +data_chart2.ata+ ' occurence in each AC',\r\n                fontSize: 20\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      autoSkip: false,\r\n                      // maxTicksLimit: 10,\r\n                      beginAtZero: true\r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                    \r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true\r\n                    },\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'ATA ' +data_chart2.ata+ ' occurence in each AC',\r\n                          fontStyle: 'bold',\r\n                          fontColor: '#001C3E'\r\n                        \r\n                    },\r\n                    gridLines: {\r\n                      display: true\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: 'right'\r\n              }\r\n            }}\r\n          />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\Analysis.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\Report.js",["156","157"],"import React, {useState,useEffect} from 'react';\r\nimport DailyReport from './DailyReport/DailyReport';\r\nimport FlagReport from './FlagReport/FlagReport';\r\nimport HistoryReport from './HistoryReport/HistoryReport';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//Buttons Imports\r\nimport Button from '@material-ui/core/Button';\r\n//Axios Imports \r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin:'50px auto',\r\n    width:'95vw',\r\n  },\r\n  flagFilters: {\r\n    margin: '20px',\r\n    maxWidth: '100%',\r\n    display: 'flex',\r\n  },  \r\n  flagH3: {\r\n    marginLeft: '24px',\r\n  },\r\n  button:{\r\n    margin:'9px 30px',\r\n    backgroundColor:\"#C5D3E0\",\r\n    width: '600px',\r\n    height: '51px',\r\n  },\r\n  buttonFlag:{\r\n    margin:'0px 50px 15px 0px',\r\n    backgroundColor:\"#C5D3E0\",\r\n    width: '89%',\r\n    // height: '51px',\r\n  },\r\n}));\r\n\r\nconst Report = (props) => {\r\n  const classes = useStyles();\r\n  const [report, setReport] = useState(props.reportConditions);\r\n  const [dailyReportData, setDailyReportData] = useState([]);\r\n  const [historyReportData, setHistoryReportData] = useState([]);\r\n  const [flagData, setFlagData] = useState('');\r\n  const [flagList,setFlagList] = useState('');\r\n  //const [ACSNList, setACSNList] = useState([]);\r\n // const [eqList, setEqList] = useState([]);\r\n\r\n  const HandleMultipleRowSelectReport = (flagList) => {\r\n    console.log(flagList);\r\n    setFlagList(flagList);\r\n  }\r\n\r\n  const [dailyValue,setDailyValue] = useState(0);\r\n  const [histValue,setHistValue] = useState(0);\r\n\r\n  useEffect( () => {\r\n      setReport(props.reportConditions);\r\n      let flag = false;\r\n      for (var item in Object.entries(props.reportConditions)) {\r\n        if ( Object.entries(props.reportConditions)[item][1] === \"\") {\r\n          flag = true;\r\n          break;\r\n        }\r\n      }\r\n      \r\n    if (flag === false){\r\n      localStorage.setItem(\"last\",JSON.stringify(props.reportConditions)); \r\n      if(props.reportConditions.analysis === \"daily\"){\r\n        localStorage.setItem(\"daily\",JSON.stringify(props.reportConditions)); \r\n      }\r\n      else if(props.reportConditions.analysis === \"history\"){\r\n        localStorage.setItem(\"history\",JSON.stringify(props.reportConditions));\r\n      } \r\n    } \r\n    }, [props.reportConditions]);\r\n\r\n  useEffect( () => {\r\n    if (report.ata !== null && report.ata !== undefined &&  report.ata !== ''){\r\n      /* Using useEffect so that axios can run only on the first render \r\n      http://localhost:8000/\"/GenerateReport/{analysisType}/{occurences}/{legs}/{intermittent}/{consecutiveDays}/{ata}/{exclude_EqID}/{airline_operator}/{include_current_message}/{fromDate}/{toDate}\") \r\n      Example of Daily Path: http://localhost:8000/GenerateReport/daily/2/2/3/0/SKW/28/0/2020-11-14/2020-11-15 */\r\n\r\n      const {analysis, occurences, legs, intermittent} = report;\r\n      let consecutiveDays;\r\n      if (report.analysis === \"daily\") {\r\n        consecutiveDays = 0;\r\n      }\r\n      else {\r\n        consecutiveDays = report.days;\r\n      }\r\n      const operator = report.operator;          \r\n      const ata = report.ata;\r\n      const eqid = report.eqID;\r\n      const messages = 0; \r\n      const fromDate = report.fromDate;\r\n      const toDate = report.toDate;\r\n\r\n      if (props.reportConditions.analysis === \"daily\"){\r\n        setDailyValue(1);\r\n      }\r\n      else if (props.reportConditions.analysis === \"history\"){\r\n        setHistValue(1);\r\n      }\r\n      if (report.analysis !== \"both\") {\r\n        /*http://localhost:8000/GenerateReport/history/2/2/2/3/('31','22','24','23')/('B1-007553','B1-005970')/skw/0/2020-11-18/2020-11-22*/\r\n\r\n        const path = 'http://localhost:8000/GenerateReport/' + analysis + '/' + occurences + '/' + legs + '/' + intermittent + '/' +\r\n        consecutiveDays + '/' + ata + '/' + eqid + '/'+ operator + '/' + messages + '/' + fromDate + '/' + toDate;\r\n\r\n        try{\r\n          axios.post(path).then(function (res) {\r\n            // console.log(res);\r\n            var data = JSON.parse(res.data);\r\n            if (report.analysis === \"daily\") {\r\n              setDailyReportData(data);\r\n            }\r\n            else if (report.analysis === \"history\") {\r\n              setHistoryReportData(data);\r\n            }\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      }\r\n    }\r\n  }, [report]);\r\n\r\n  const [flagConditions,setFlagConditions] = useState('');\r\n\r\n  const handleGenerateFlagReport = (event) => {\r\n  setFlagConditions(\r\n    {         \r\n      analysis: props.reportConditions.analysis,\r\n      occurences: props.reportConditions.occurences,\r\n      legs: props.reportConditions.legs,\r\n      HistExEqID: props.reportConditions.eqID,\r\n      intermittent: props.reportConditions.intermittent,\r\n      days: props.reportConditions.days,\r\n      operator: props.reportConditions.operator,\r\n      HistAta: props.reportConditions.ata,\r\n      messages: props.reportConditions.messages,\r\n      fromDate: props.reportConditions.fromDate,\r\n      toDate: props.reportConditions.toDate,\r\n      flagList: flagList,\r\n    },\r\n  );\r\n  }\r\n  useEffect(() => {\r\n    let flag = false;\r\n    Object.values(flagConditions).map(item => {\r\n      if (item === \"\"){\r\n        flag = true;\r\n      }\r\n    });\r\n\r\n    if (flag === false) {  \r\n      /*\r\n      const path = 'http://localhost:8000/GenerateReport/{analysisType}/{occurences}/{legs}/{intermittent}/{consecutiveDays}/{ata}/\r\n      {exclude_EqID}/{airline_operator}/{include_current_message}/{fromDate}/{toDate}/{acsn,bcode}';\r\n      http://127.0.0.1:8000/GenerateReport/history/2/2/2/8/('32','22')/('B1-007553', 'B1-246748')/skw/1/2020-11-11/2020-11-12/('10214','B1-005815'), ('10214','B1-005831')\r\n      */\r\n      \r\n      const flagPath = 'http://localhost:8000/GenerateReport/' + flagConditions.analysis + '/' + flagConditions.occurences + '/' + \r\n      flagConditions.legs + '/' + flagConditions.intermittent + '/' + flagConditions.days + '/' + flagConditions.HistAta + '/' + \r\n      flagConditions.HistExEqID + '/'+ flagConditions.operator + '/' + flagConditions.messages + '/' + flagConditions.fromDate + '/' + \r\n      flagConditions.toDate + '/' + flagConditions.flagList;\r\n\r\n      try{\r\n        axios.post(flagPath).then(function (res) {\r\n          var data = JSON.parse(res.data);\r\n          setFlagData(data);\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n  },[flagConditions]);\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      {historyReportData !== \"\" && historyReportData !== \"undefined\" && histValue === 1 &&\r\n        <>\r\n          <div>\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={10}></Grid>\r\n              <Grid item xs={2}>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  onClick = {()=>handleGenerateFlagReport()}\r\n                  className={classes.buttonFlag}>\r\n                    Generate Flag Report\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <HistoryReport data = {historyReportData}  title = \"History Report\" reportConditions = {report} HandleMultipleRowSelectReport = {HandleMultipleRowSelectReport}/>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </>\r\n      }\r\n      {dailyReportData !== \"\" && dailyReportData !== \"undefined\" && dailyValue === 1 &&\r\n        <>\r\n          <DailyReport data = {dailyReportData} title = \"Daily Report\" reportConditions = {report}/>\r\n        </>\r\n      }\r\n      {flagData !== \"\" && flagData !== \"undefined\" && \r\n        <>\r\n          <FlagReport data = {flagData} flagReportConditions = {flagConditions} title = \"Flag Report\"/>\r\n        </>\r\n      }\r\n    </div>  \r\n  );    \r\n};\r\n\r\nexport default Report;","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\FlagReport\\FlagReport.js",["158","159"],"import React,{useState} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    alignItems:\"center\",\r\n    maxWidth: '92vw',\r\n    margin:  '20px',\r\n  },\r\n}));\r\n\r\nconst FlagReport = (props) => {\r\n  const history = useHistory();\r\n  // const [flagConditions, setFlagConditions] = useState(history.location.state.flagConditions);\r\n  // const [flagData, setFlagData] = useState(history.location.state.flagData);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"MSN\",\r\n      label: \"MSN\",\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'ATA', \r\n      label: 'ATA',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'code', \r\n      label: 'B1-Equation',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\r\n      }\r\n    },\r\n    {\r\n      name: 'LRU', \r\n      label: 'LRU',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'message', \r\n      label: 'Message',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'type', \r\n      label: 'Type',\r\n      options: {\r\n       filter: false,\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'FDE', \r\n      label: 'Potential FDE',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'dateFrom', \r\n      label: 'Date From',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'dateTo', \r\n      label: 'Date To',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'action', \r\n      label: 'SKW action WIP',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\r\n      }\r\n     },\r\n     {\r\n      name: 'input', \r\n      label: 'ISE Input',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'iseRecAct', \r\n      label: 'ISE Rec Act',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n    ];\r\n\r\n    let data = [];\r\n  \r\n    // history.location.state.flagData?.map((item => {\r\n      props?.data?.map((item => {\r\n        data.push(\r\n          {\r\n            MSN: item[\"AC SN\"], \r\n            ATA: item[\"ATA\"], \r\n            code: item[\"B1-Equation\"], \r\n            LRU: item[\"LRU\"],  \r\n            message: item[\"Message\"],  \r\n            type: item[\"Type\"],  \r\n            FDE: item[\"Potential FDE\"],  \r\n            dateFrom: item[\"Date From\"],   \r\n            dateTo: item[\"Date To\"],   \r\n            action: item[\"SKW WIP\"],  \r\n            input: item[\"ISE Input\"],  \r\n            iseRecAct: item[\"ISE Rec Act\"],  \r\n          }\r\n        );\r\n        return data;\r\n      }\r\n      ));\r\n\r\n    const options = {\r\n      filter: true,\r\n      filterType: 'multiselect',\r\n      responsive: \"standard\",\r\n      fixedHeader: true,\r\n      fixedSelectColumn: true,\r\n      downloadOptions: {\r\n        filename: 'Flag Report from ' + props.flagReportConditions.fromDate + ' to ' + props.flagReportConditions.toDate + '.csv',\r\n        separator: ',',\r\n      },\r\n      draggableColumns: {\r\n        enabled: false,\r\n        transitionTime: 300,\r\n      },\r\n      elevation: 4,\r\n      rowsPerPage: 25,\r\n      rowsPerPageOptions: [25,50],\r\n      selectToolbarPlacement:\"none\",\r\n    };\r\n\r\n    const theme = createMuiTheme({\r\n      palette: {type: 'light'},\r\n      typography: {useNextVariants: true},\r\n  });\r\n  \r\nconst classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n            <MuiThemeProvider theme={theme}>\r\n              <MUIDataTable\r\n                title={\"Flag Report\"}\r\n                data={data}\r\n                columns={columns}\r\n                options={options}\r\n              />\r\n            </MuiThemeProvider> \r\n        </Grid> \r\n      </Grid> \r\n    </div>\r\n  );\r\n}\r\nexport default FlagReport;\r\n\r\n","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\Rawdata\\RawMdcMessages.js",["160"],"import React,{useEffect, useState} from 'react';\r\nimport RawDataTable from './RawDataTable';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DatePicker from '../../GenerateReport/DatePicker';\r\nimport {AirlineOperatorSelector,ATAMainSelector,MessagesSelector,EqIDSelector} from '../../GenerateReport/Selectors';\r\n//Buttons Imports\r\nimport Button from '@material-ui/core/Button';\r\n//Axios Imports \r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  form:{\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      // width: '25ch',\r\n      // marginBottom:20,\r\n  },\r\n},\r\n  paper: {\r\n    margin: '50px auto 20px',\r\n    width: '92vw',\r\n  },\r\n  card:{\r\n    backgroundColor: \"#C5D3E0\",\r\n    textAlign: 'center',\r\n    justify: 'center',\r\n    padding: '5px',\r\n  },\r\n  Grid:{\r\n    margin: 'auto',\r\n    padding:'20px 20px 20px 50px',\r\n  },\r\n  button:{\r\n    margin:'50px 30px',\r\n    // height:'40px',\r\n    padding: '10px',\r\n    backgroundColor:\"#C5D3E0\",\r\n  },\r\n  EqSelector:{\r\n    marginTop:'9px',\r\n    marginRight:'0px',\r\n    width:'100px',\r\n  },\r\n  ATASelector:{\r\n    // marginTop:'9px',\r\n  },\r\n  h3:{\r\n    marginLeft: '5px',\r\n    fontSize:'20px',\r\n  },\r\n}));\r\n\r\nconst RawMdcMessages = () => {\r\n  const classes = useStyles();\r\n\r\n  // ----- States and handle Functions for Date  ----- \r\n  const [dateFrom, setDateFrom] = useState();\r\n  const [dateTo, setDateTo] = useState();\r\n\r\n  const handleDateFrom = (date) => {\r\n    setDateFrom(date);\r\n  };\r\n\r\n  const handleDateTo = (date) => {\r\n    setDateTo(date);\r\n  };\r\n// ----- States and handle Functions for Selects  ----- \r\nconst [airline, setAilineType] = useState();\r\nconst [ATAMain, setATAMain] = React.useState('');\r\nconst [messagesChoice, setIncludeMessages] = React.useState('');\r\nconst [EqID, setEqID] = React.useState('');\r\n\r\nconst handleAirlineChange = (Airline) => {\r\n  setAilineType(Airline);\r\n};\r\n\r\nconst handleATAChange = (ATA) => {\r\n  setATAMain(ATA);\r\n};\r\n\r\nconst handleMessagesChange = (messages) => {\r\n  setIncludeMessages(messages);\r\n};\r\n\r\nconst handleEqIDChange = (eqIDList) => {\r\n  setEqID(eqIDList);\r\n};\r\n\r\n// ----- States and handle Functions for Generate Report  ----- \r\n\r\nconst [rawDataConditions, setRawDataConditions] = React.useState(\r\n  {\r\n    operator: '',\r\n    ata: '',\r\n    eqID: '',\r\n    messages: '',\r\n    fromDate: '',\r\n    toDate: '',\r\n  }\r\n );\r\nconst [rawData, setRawData] = React.useState('');\r\nconst [isValid, setIsValid] = React.useState(false);\r\n\r\nconst handleGenerateReport = (event) => {\r\n\r\n  setRawDataConditions(\r\n      {\r\n        operator: airline,\r\n        ata: ATAMain,\r\n        eqID: EqID,\r\n        messages: messagesChoice,\r\n        fromDate: dateFrom,\r\n        toDate: dateTo,\r\n      },\r\n    );\r\n\r\n    let flag = isValid;\r\n    for (const item in rawDataConditions) {\r\n      if (Object.hasOwnProperty.call(rawDataConditions, item)) {\r\n        const element = rawDataConditions[item];\r\n        if ( element !== false ) {\r\n          flag = true;\r\n        } else {\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setIsValid(flag);\r\n}\r\n\r\nuseEffect(()=>{\r\n  if (isValid === true) {  \r\n    ///MDCRawData/{ATAMain_list}/{exclude_EqID_list}/{fromDate}/{toDate}\"\r\n    //http://localhost:8000/MDCRawData/('32','22')/('B1-007553','B1-246748')/skw/0/2020-11-05/2020-11-12\r\n    \r\n    const path = 'http://localhost:8000/MDCRawData/' + rawDataConditions.ata + '/' + rawDataConditions.eqID + '/' + rawDataConditions.operator + \r\n    '/' + rawDataConditions.messages + '/' + rawDataConditions.fromDate + '/' + rawDataConditions.toDate;\r\n\r\n    try{\r\n      axios.post(path).then(function (res) {\r\n        // console.log(res);\r\n        var data = JSON.parse(res.data);\r\n          setRawData(data);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n},[rawDataConditions])\r\n\r\n  return (\r\n    <div className={classes.root}>   \r\n     <form className={classes.form}>\r\n      <Paper className={classes.paper}>\r\n        <div className ={classes.card}>\r\n          <h2>RAW DATA FILTERS</h2>\r\n        </div>\r\n         <Grid className={classes.Grid} container spacing={0}> \r\n            <Grid item xs={2}>\r\n            <AirlineOperatorSelector\r\n                handleAirlineChange = {handleAirlineChange}                \r\n              />     \r\n              <MessagesSelector \r\n                handleMessagesChange = {handleMessagesChange}\r\n              />\r\n            </Grid>\r\n            <Grid className={classes.ATASelector} item xs={6}>\r\n            <ATAMainSelector \r\n                handleATAChange = {handleATAChange}\r\n              /> \r\n              <EqIDSelector \r\n                handleEqIDChange = {handleEqIDChange}\r\n              />   \r\n            </Grid>\r\n            <Grid item xs={2}>\r\n            <DatePicker \r\n              label = \"From\"\r\n              handleDateFrom = {handleDateFrom}\r\n            />   \r\n            <DatePicker \r\n              label = \"To\"\r\n              handleDateTo = {handleDateTo}\r\n            /> \r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button \r\n                variant=\"contained\" \r\n                onClick = {()=>handleGenerateReport()}\r\n                className={classes.button}>\r\n                  Filter Raw Data\r\n              </Button>                 \r\n            </Grid>\r\n          </Grid>\r\n     </Paper>\r\n     </form>\r\n     <RawDataTable\r\n       data = {rawData}\r\n       rawDataConditions = {rawDataConditions}\r\n     />\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default RawMdcMessages;","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\Conditions.js",["161"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {OccurencesInput,LegsInput,IntermittentInput,DaysInput} from './AnalysisInput';\r\n//import AnalysisType from './AnalysisType';\r\nimport Paper from '@material-ui/core/Paper';\r\n//import ReportType from './ReportType';\r\nimport DatePicker from './DatePicker';\r\nimport {AirlineOperatorSelector,ATAMainSelector,MessagesSelector,EqIDSelector} from './Selectors';\r\nimport Report from '../Reports/Report';\r\nimport { useHistory } from \"react-router-dom\";\r\n//Radio Button Imports\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n//Buttons Imports\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n    form:{\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        // width: '25ch',\r\n        // marginBottom:20,\r\n    },\r\n  },\r\n  paper: {\r\n    // margin: 'auto',\r\n    // width: '1200px',\r\n    margin: '20px auto 23px 20px',\r\n    width: '92vw',\r\n  },\r\n  container: {\r\n    padding: '20px 40px',\r\n  },\r\n  h3:{\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n  },\r\n  Grid:{\r\n    paddingLeft:'30px',\r\n    margin: 'auto',\r\n  },\r\n  card:{\r\n    backgroundColor: \"#C5D3E0\",\r\n    textAlign: 'center',\r\n    justify: 'center',\r\n    padding: '5px',\r\n  },\r\n  formLabel:{\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: '20px',\r\n  },\r\n  analysisType:{\r\n    margin: '20px auto 30px',\r\n  },\r\n  button:{\r\n    margin:'40px auto',\r\n    width:'70%',\r\n    backgroundColor:\"#C5D3E0\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width:'90%',\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Conditions = (props) => {\r\n  const classes = useStyles();\r\n\r\n   // ----- States and handle Functions for Radio Buttons  ----- \r\n   const [analysis, setAnalysisType] = useState(\"daily\");\r\n   const [EqID, setEqID] = useState('');\r\n\r\n    const handleAnalysisChange = (analysis) => {\r\n      setAnalysisType(analysis);\r\n    };\r\n\r\n   // ----- States and handle Functions for Date  ----- \r\n    const [dateFrom, setDateFrom] = useState();\r\n    const [dateTo, setDateTo] = useState();\r\n\r\n    const handleDateFrom = (date) => {\r\n      setDateFrom(date);\r\n    };\r\n\r\n    const handleDateTo = (date) => {\r\n      setDateTo(date);\r\n    };\r\n\r\n  // ----- States and handle Functions for Inputs  ----- \r\n    const [occurences, setOccurrences] = useState();\r\n    const [legs, setLegs] = useState();\r\n    const [intermittent, setIntermittent] = useState();\r\n    const [days, setDays] = useState('0');\r\n\r\n  const handleOccurencesChange = (occurences) =>{\r\n    setOccurrences(occurences);\r\n  };\r\n  const handleLegsChange = (legs) =>{\r\n    setLegs(legs);\r\n  };\r\n  const handleIntermittentChange = (intermittent) =>{\r\n    setIntermittent(intermittent);\r\n  };\r\n  const handleDaysChange = (days) =>{\r\n    setDays(days);\r\n  };\r\n\r\n  // ----- States and handle Functions for Selects  ----- \r\n  const [airline, setAilineType] = useState();\r\n  const [ATAMain, setATAMain] = React.useState('');\r\n  const [messagesChoice, setIncludeMessages] = React.useState('');\r\n\r\n  const handleAirlineChange = (Airline) => {\r\n    setAilineType(Airline);\r\n  };\r\n\r\n  const handleATAChange = (ATA) => {\r\n    setATAMain(ATA);\r\n  };\r\n\r\n  const handleMessagesChange = (messages) => {\r\n    setIncludeMessages(messages);\r\n  };\r\n\r\n  const handleEqIDChange = (eqIDList) => {\r\n    setEqID(eqIDList);\r\n  };\r\n    \r\n// ----- States and handle Functions for Generate Report  ----- \r\n\r\nconst [reportConditions, setReportConditions] = useState(\r\n  {\r\n    analysis: '',\r\n    occurences: '',\r\n    legs: '',\r\n    intermittent: '',\r\n    days: '',\r\n    operator: '',\r\n    ata: '',\r\n    eqID: '',\r\n    messages: '',\r\n    fromDate: '',\r\n    toDate: '',\r\n  }\r\n );\r\n\r\n  const handleGenerateReport = (event) => {\r\n    setReportConditions(\r\n    {\r\n      analysis: analysis,\r\n      occurences: occurences,\r\n      legs: legs,\r\n      eqID: EqID,\r\n      intermittent: intermittent,\r\n      days: days,\r\n      operator: airline,\r\n      ata: ATAMain,\r\n      messages: messagesChoice,\r\n      fromDate: dateFrom,\r\n      toDate: dateTo,\r\n    });\r\n    console.log(reportConditions);\r\n  }    \r\n\r\n  return (\r\n    <div>\r\n      <form className={classes.form}>\r\n        <Paper className={classes.paper}>\r\n        <div className ={classes.card}>\r\n          <h2>REPORT ANALYSIS</h2>\r\n        </div>\r\n        <div className={classes.container}>\r\n          <Grid className={classes.Grid} container spacing={3}> \r\n            <Grid item xs={2}>\r\n            <div className={classes.analysisType}>\r\n              <FormControl component=\"fieldset\" className=\"form\" >\r\n              <FormLabel component=\"legend\" className={classes.formLabel}>Analysis Type</FormLabel>\r\n              <RadioGroup aria-label=\"analysis\" name=\"analysis\" value={analysis} >\r\n                <FormControlLabel value=\"daily\" className=\"RadioButton\" control={\r\n                  <Radio \r\n                    size=\"medium\"\r\n                    color = 'default'\r\n                    onChange={()=>handleAnalysisChange(\"daily\")} \r\n                  />} label=\"Daily\" />\r\n                <FormControlLabel value=\"history\" control={\r\n                  <Radio \r\n                  size=\"medium\"\r\n                  color = 'default'\r\n                  onChange={()=>handleAnalysisChange(\"history\")} \r\n                  />} label=\"History\" />\r\n              </RadioGroup>\r\n              </FormControl> \r\n            </div>           \r\n            </Grid>\r\n            <Grid item xs={2}>     \r\n              <div>\r\n                <h3>Analysis Input</h3>   \r\n                <OccurencesInput \r\n                  handleOccurencesChange = {handleOccurencesChange}\r\n                />\r\n                <LegsInput \r\n                  handleLegsChange = {handleLegsChange}\r\n                />  \r\n                <IntermittentInput \r\n                  handleIntermittentChange = {handleIntermittentChange}\r\n                />\r\n                <DaysInput analysis = {analysis}  handleDaysChange = {handleDaysChange}/>   \r\n              </div>           \r\n            </Grid>  \r\n            <Grid item xs={5}>     \r\n            <div>\r\n            <h3>Raw Data Conditions</h3> \r\n            <AirlineOperatorSelector\r\n                handleAirlineChange = {handleAirlineChange}  \r\n              />         \r\n              <MessagesSelector \r\n                handleMessagesChange = {handleMessagesChange}\r\n              />   \r\n              <ATAMainSelector \r\n                handleATAChange = {handleATAChange}\r\n              />   \r\n              <EqIDSelector \r\n                handleEqIDChange = {handleEqIDChange}\r\n              />  \r\n            </div>                    \r\n            </Grid>       \r\n            <Grid item xs={3}>     \r\n            <h3>Report Date</h3> \r\n        \r\n            <DatePicker \r\n              label = \"From\"\r\n              handleDateFrom = {handleDateFrom}\r\n            />   \r\n            <DatePicker \r\n              label = \"To\"\r\n              handleDateTo = {handleDateTo}\r\n            />   \r\n            <Button \r\n              variant=\"contained\" \r\n              onClick = {async()=>handleGenerateReport()}\r\n              className={classes.button}>\r\n                Generate Report\r\n            </Button>  \r\n            </Grid>          \r\n        </Grid>\r\n      </div>\r\n        </Paper>\r\n      </form>\r\n        <Report reportConditions = {reportConditions}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conditions;","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\Selectors.js",["162","163","164"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n//Multiple select filters\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width:'90%',\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  container:{\r\n    margin: '0px 50px 0px 0px',\r\n  },\r\n  autocomplete:{\r\n    margin: theme.spacing(0),\r\n    width:'90%',\r\n    minWidth: 120,\r\n  }\r\n}));\r\n\r\nconst AirlineList = ['SKW'];\r\nconst MessagesList = ['Include', 'Exclude'];\r\n\r\nexport const AirlineOperatorSelector = (props) => {\r\n  const classes = useStyles();\r\n  const [airline, setAirline] = React.useState('');\r\n\r\n  const handleAirlineChange = (event) => {\r\n    setAirline(event.target.value);\r\n    props.handleAirlineChange(event.target.value);\r\n  };\r\n\r\n  return(\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-outlined-label\">Airline Operator</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        value={airline}\r\n        onChange={handleAirlineChange}\r\n        label=\"Airline Operator\"\r\n      >\r\n      <MenuItem value=\"none\"> </MenuItem>\r\n      {AirlineList.map( item => \r\n        <MenuItem value={item} key={item}> {item} </MenuItem>\r\n      )};\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport const ATAMainSelector = (props) => {\r\n  const classes = useStyles();\r\n  const [ATAMain, setATAMain] = React.useState([]);\r\n  const [ATAMainList,setATAMainList] = useState([]);\r\n  useEffect(() => {\r\n    const path = 'http://localhost:8000/GenerateReport/ata_main/ALL'\r\n\r\n    try{\r\n      axios.post(path).then(function (res) {\r\n        var data = JSON.parse(res.data);\r\n        let ATAArray = ['ALL'];\r\n        Object.values(data).map((item=>{\r\n          ATAArray.push(item.ATA_Main.toString());\r\n        }))\r\n        setATAMainList(ATAArray);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n},[]);\r\n\r\n  const handleATAChange = (event, values) => {\r\n    setATAMain(values);\r\n    if(values.includes(\"ALL\")){\r\n      props.handleATAChange(\"ALL\");\r\n    }else{\r\n      let ataList =  \"('\"+ values.join(\"','\") +\"')\";\r\n      props.handleATAChange(ataList);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Autocomplete\r\n    className={classes.autocomplete}\r\n    multiple\r\n    options={ATAMainList}\r\n    getOptionLabel={(item => item)}\r\n    value = {ATAMain}\r\n    filterSelectedOptions\r\n    onChange = {handleATAChange}\r\n    renderInput={(params) => (\r\n      <TextField\r\n        {...params}\r\n        variant=\"outlined\"\r\n        label=\"ATA Main\"\r\n        placeholder=\"ATA Main\"\r\n        />\r\n    )}\r\n  />\r\n  );\r\n}\r\n\r\nexport const EqIDSelector = (props) => {\r\n  const classes = useStyles();\r\n  const [EqID, setEqID] = React.useState([]);\r\n  const [EqList,setEqIDList] = useState([]);\r\n  useEffect(() => {\r\n    const path = 'http://localhost:8000/GenerateReport/equation_id/ALL'\r\n\r\n    try{\r\n      axios.post(path).then(function (res) {\r\n        var data = JSON.parse(res.data);\r\n        let EQArray = ['NONE'];\r\n        Object.values(data).map((item=>{\r\n          EQArray.push(item.Equation_ID.toString());\r\n        }))\r\n        setEqIDList(EQArray);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n},[]);\r\n\r\n  const handleEqIDChange = (event, values) => {\r\n    setEqID(values);\r\n    if(values.includes(\"ALL\")){\r\n      props.handleEqIDChange(\"ALL\");\r\n    }\r\n    else{\r\n      let eqIDLIST =  \"('\"+ values.join(\"','\") +\"')\";\r\n      props.handleEqIDChange(eqIDLIST);\r\n    }\r\n  };\r\n\r\n  return(\r\n\r\n    <Autocomplete\r\n        className={classes.autocomplete}\r\n        multiple\r\n        options={EqList}\r\n        getOptionLabel={(item => item)}\r\n        value = {EqID}\r\n        filterSelectedOptions\r\n        onChange = {handleEqIDChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"Exclude Equation ID\"\r\n            placeholder=\"EqID\"\r\n            />\r\n        )}\r\n      />\r\n  );\r\n};\r\n\r\nexport const MessagesSelector = (props) => {\r\n  const classes = useStyles();\r\n  const [messages, setIncludeMessages] = React.useState('');\r\n\r\n  const handleMessagesChange = (event) => {\r\n    let value = 0;\r\n    if(event.target.value == 'Include'){\r\n      value = 1;\r\n    }\r\n    setIncludeMessages(event.target.value);\r\n    props.handleMessagesChange(value);\r\n  };\r\n\r\n  return(\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n    <InputLabel id=\"demo-simple-select-outlined-label\">Current Messages</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        value={messages}\r\n        onChange={handleMessagesChange}\r\n        label=\"Current Messages\"\r\n      >\r\n      <MenuItem value=\"none\"> </MenuItem>\r\n      {MessagesList.map( item => \r\n        <MenuItem value={item} key={item} >{item} </MenuItem>\r\n      )};\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nconst Selectors = (props) => {\r\n\r\n  return (\r\n    <div></div>\r\n  );\r\n};\r\n\r\n  export default Selectors;","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\HistoryReport\\HistoryReport.js",["165"],"import React, {useState} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    alignItems:\"center\",\r\n    maxWidth: '92vw',\r\n    margin:  '20px',\r\n  },\r\n  button:{\r\n    margin:'0px 30px 15px 0px',\r\n    backgroundColor:\"#C5D3E0\",\r\n    width: '100%',\r\n    // height: '51px',\r\n  },\r\n}));\r\n\r\nconst HistoryReport = (props) => {\r\n  const [flagList, setFlagList] = useState();\r\n  const [rowsSelectedState, setRowsSelected] = useState([]);\r\n\r\n  const HandleMultipleRowSelect = (rowsSelectedData, allRows, rowsSelected) => {\r\n    //Data index to get the row no matter the sorting or filtering;\r\n    //console.log(rowsSelectedData,allRows,rowsSelected);\r\n    setRowsSelected(rowsSelected);\r\n    let FlagArray = [];\r\n    Object(rowsSelected).map((item => {\r\n      FlagArray.push(\"('\"+ data[item].ACSN +\"','\"+ data[item].B1Equation +\"')\");\r\n      return FlagArray;\r\n    }));\r\n    let flagList =  FlagArray.join(\", \");\r\n    setFlagList(flagList);\r\n    props.HandleMultipleRowSelectReport(flagList);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: 'ACSN', \r\n      label: 'ACSN',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'EICASMessages', \r\n      label: 'EICAS Messages',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\r\n      }\r\n    },\r\n    {\r\n      name: 'mdcMessages', \r\n      label: 'MDC Messages',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'LRU', \r\n      label: 'LRU',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'ATA', \r\n      label: 'ATA',\r\n      options: {\r\n       filter: false,\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'B1Equation', \r\n      label: 'B1 Equation',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'type', \r\n      label: 'Type',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n    },\r\n    {\r\n      name: 'equationDescription', \r\n      label: 'Equation Description',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'totalOccurences', \r\n      label: 'Total Occurences',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\r\n      }\r\n     },\r\n     {\r\n      name: 'consecutiveDays', \r\n      label: 'Consecutive Days',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\r\n      }\r\n     },\r\n     {\r\n      name: 'ConsecutiveFlights', \r\n      label: 'Consecutive Flights',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'intermittent', \r\n      label: 'Intermittent',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'reasons', \r\n      label: 'Reasons for flag',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'priority', \r\n      label: 'Priority',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"100px\"}})\r\n      }\r\n     },\r\n     {\r\n      name: 'topMessage', \r\n      label: 'Known Top Message - Recommended Documents\tMHIRJ ISE',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'recommendation', \r\n      label: 'MHIRJ ISE Recommendation',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'comments', \r\n      label: 'Additional Comments',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n     {\r\n      name: 'input', \r\n      label: 'MHIRJ ISE Input',\r\n      options: {\r\n       filter: true,\r\n       filterType: 'dropdown',\r\n       sort: true,\r\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n      }\r\n     },\r\n    ];\r\n\r\n    let data = [];\r\n      props?.data?.map((item => {\r\n        data.push(\r\n          {\r\n            ACSN: item[\"AC SN\"], \r\n            EICASMessages: item[\"EICAS Message\"], \r\n            mdcMessages: item[\"MDC Message\"],  \r\n            LRU: item[\"LRU\"],  \r\n            ATA: item[\"ATA\"],  \r\n            B1Equation: item[\"B1-Equation\"],  \r\n            type: item[\"Type\"],   \r\n            equationDescription: item[\"Equation Description\"],   \r\n            totalOccurences: item[\"Total Occurences\"],  \r\n            consecutiveDays: item[\"Consective Days\"],\r\n            ConsecutiveFlights: item[\"Consecutive FL\"],  \r\n            intermittent: item[\"Intermittent\"],  \r\n            reasons: item[\"Reason(s) for flag\"],   \r\n            priority: item[\"Priority\"],   \r\n            topMessage: item[\"Known Top Message - Recommended Documents\"],  \r\n            recommendation: item[\"MHIRJ ISE Recommendation\"], \r\n            comments: item[\"Additional Comments\"],  \r\n            input: item[\"MHIRJ ISE Input\"],  \r\n          }\r\n        );\r\n        return data;\r\n      }\r\n      ));\r\n\r\n    const options = {\r\n      selectableRows: 'multiple',\r\n      selectableRowsOnClick: true,\r\n      rowsSelected: rowsSelectedState,\r\n      onRowSelectionChange: HandleMultipleRowSelect,\r\n      filter: true,\r\n      filterType: 'multiselect',\r\n      responsive: \"standard\",\r\n      fixedHeader: true,\r\n      fixedSelectColumn: true,\r\n      downloadOptions: {\r\n        filename: 'History Report from ' + props.reportConditions.fromDate + ' to ' + props.reportConditions.toDate + '.csv',\r\n        separator: ',',\r\n      },\r\n      draggableColumns: {\r\n        enabled: false,\r\n        transitionTime: 300,\r\n      },\r\n      elevation: 4,\r\n      rowsPerPage: 20,\r\n      rowsPerPageOptions: [20,50],\r\n      selectToolbarPlacement:\"none\",\r\n    };\r\n\r\n    const theme = createMuiTheme({\r\n      palette: {type: 'light'},\r\n      typography: {useNextVariants: true},\r\n  });\r\n  \r\nconst classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n            <MuiThemeProvider theme={theme}>\r\n              <MUIDataTable\r\n                title= {props.title}\r\n                data={data}\r\n                columns={columns}\r\n                options={options}\r\n              />\r\n            </MuiThemeProvider> \r\n        </Grid> \r\n      </Grid> \r\n    </div>\r\n  );\r\n}\r\nexport default HistoryReport;\r\n\r\n","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\DailyReport\\DailyReport.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\DatePicker.js",["166"],"import React,{useState,Fragment} from 'react';\r\n//$ npm i --save date-fns@next @date-io/date-fns\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n//$ npm install @material-ui/pickers\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\n\r\nconst DatePicker = (props) => {\r\n  const [selectedDate, setDate] = useState(moment());\r\n  const [inputValue, setInputValue] = useState(moment().format(\"YYYY-MM-DD\"));\r\n\r\n  const handleDateChange = (date, value) => {\r\n    setDate(date);\r\n    setInputValue(value);\r\n    props.handleDateFrom ? props.handleDateFrom(value) : props.handleDateTo(value);\r\n  };\r\n\r\n  const dateFormatter = str => {\r\n    return str;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n        <KeyboardDatePicker \r\n          style={{margin: \"12px 10px 10px\"}}\r\n          autoOk={true}\r\n          //showTodayButton={true}\r\n            value={selectedDate}\r\n            format=\"YYYY-MM-DD\"\r\n            inputValue={inputValue}\r\n            onChange={handleDateChange}\r\n            rifmFormatter={dateFormatter}\r\n            label={props.label}\r\n            variant=\"inline\"\r\n        /> \r\n    </MuiPickersUtilsProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DatePicker;","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\Reports\\Rawdata\\RawDataTable.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\MdcMessages\\GenerateReport\\AnalysisInput.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Correlation\\Correlation.js",[],"C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Correlation\\PMTable.js",["167","168"],"import React, {useState,useEffect} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport DatePicker from '../MdcMessages/GenerateReport/DatePicker';\r\nimport {ATAMainSelector,EqIDSelector} from '../MdcMessages/GenerateReport/Selectors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CorrelationSubTable from './CorrelationSubTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n    form:{\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        // width: '25ch',\r\n        // marginBottom:20,\r\n    },\r\n  },\r\n  paper: {\r\n    // margin: 'auto',\r\n    // width: '1200px',\r\n    margin: '20px auto 23px 20px',\r\n    width: '92vw',\r\n  },\r\n  container: {\r\n    padding: '20px 40px',\r\n  },\r\n  button:{\r\n    //margin:'40px auto',\r\n    height: '50px',\r\n    width:'100%',\r\n    backgroundColor:\"#C5D3E0\",\r\n  },\r\n  Grid:{\r\n    paddingLeft:'30px',\r\n    margin: 'auto',\r\n  },\r\n  card:{\r\n    backgroundColor: \"#C5D3E0\",\r\n    textAlign: 'center',\r\n    justify: 'center',\r\n    padding: '5px',\r\n  },\r\n  formLabel:{\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginBottom: '20px',\r\n  },\r\n  TableGrid:{\r\n    paddingLeft:'11px',\r\n    margin: '0px',\r\n    width:'94vw',\r\n  }\r\n}));\r\n\r\nconst PMTable = (props) => {\r\n  const classes = useStyles();\r\n  const [dateFrom, setDateFrom] = useState();\r\n  const [dateTo, setDateTo] = useState();\r\n  const [ATAMain, setATAMain] = useState();\r\n  const [EqID, setEqID] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [responseData,setResponseData] = useState([]);\r\n\r\n  const handleDateFrom = (date) => {\r\n    setDateFrom(date);\r\n    console.log(date);\r\n  };\r\n\r\n  const handleDateTo = (date) => {\r\n    setDateTo(date);\r\n    console.log(date);\r\n  };\r\n  const handleATAChange = (ATA) => {\r\n    setATAMain(ATA);\r\n    console.log(ATA);\r\n  };\r\n  const handleEqIDChange = (eqIDList) => {\r\n    setEqID(eqIDList);\r\n    console.log(eqIDList);\r\n  };\r\n\r\n  const handleGeneratePMTable = ()=> {\r\n  /*http://localhost:8000/corelation/11-11-2020/11-12-2020/B1-008003/27*/\r\n\r\n  const path = 'http://localhost:8000/corelation/' + dateFrom + '/' + dateTo + '/' + EqID + '/' + ATAMain;\r\n  //const path = 'http://localhost:8000/corelation/'+ dateFrom + '/' + dateTo + '/B1-008003/27';\r\n  console.log(path);\r\n  try{\r\n    axios.post(path).then(function (res) {\r\n      var data = JSON.parse(res.data);\r\n      setData(data);\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  } \r\n  }\r\n\r\nconst columns = [\r\n  {\r\n    name: \"p_id\",\r\n    label: \"p_id\",\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'operator', \r\n    label: 'Operator',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'model', \r\n    label: 'Model',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\r\n    }\r\n  },\r\n  {\r\n    name: 'type', \r\n    label: 'Type',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'serialNo', \r\n    label: 'Serial_No',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'date', \r\n    label: 'Date',\r\n    options: {\r\n      filter: false,\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'failureFlag', \r\n    label: 'Failure Flag',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'maintTrans', \r\n    label: 'MaintTrans',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'maintCanc', \r\n    label: 'Maintenance Cancellations',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'maintDel', \r\n    label: 'Maintenance Delays',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\r\n    }\r\n    },\r\n    {\r\n    name: 'inspection', \r\n    label: 'Inspection',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'campType', \r\n    label: 'Camp Type',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'MRB', \r\n    label: 'MRB',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"100px\"}})\r\n    }\r\n    },\r\n    {\r\n    name: 'discrepancy', \r\n    label: 'Discrepancy',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'corActions', \r\n    label: 'Corrective Action',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'totalHours', \r\n    label: 'AC Total Hours',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'totalCycles', \r\n    label: 'AC Total Cycles',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'squawkSource', \r\n    label: 'Squawk Source',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'ATA', \r\n    label: 'ATA',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'station', \r\n    label: 'Station',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'ATA_SUB', \r\n    label: 'ATA SUB',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'ATA_Main', \r\n    label: 'ATA Main',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n];\r\n\r\n// useEffect( () => {\r\n  \r\n// }, []);\r\n\r\nif (data){\r\n  data.map((item => {\r\n    responseData.push(\r\n      {\r\n        p_id: item[\"p_id\"], \r\n        operator: item[\"Operator\"], \r\n        model: item[\"Model\"], \r\n        type: item[\"Type\"],  \r\n        serialNo: item[\"Serial_No\"],  \r\n        date: item[\"date\"],  \r\n        failureFlag: item[\"Failure Flag\"],  \r\n        maintTrans: item[\"Maint Trans\"],   \r\n        maintCanc: item[\"Maintenance Cancellations\"],   \r\n        maintDel: item[\"Maintenance Delays\"],  \r\n        inspection: item[\"Inspection\"],  \r\n        campType: item[\"CampType\"],   \r\n        MRB: item[\"MRB\"],   \r\n        discrepancy: item[\"Discrepancy\"],  \r\n        corActions: item[\"Corrective Action\"], \r\n        totalHours: item[\"AC Total Hours\"],  \r\n        totalCycles: item[\"AC Total Cycles\"],  \r\n        squawkSource:  item[\"Squawk Source\"],\r\n        ATA: item[\"ATA\"],\r\n        station: item[\"Station\"],\r\n        ATA_SUB: item[\"ATA_SUB\"],\r\n        ATA_Main: item[\"ATA_Main\"],\r\n      }\r\n    );\r\n     return responseData\r\n  }\r\n  ));\r\n\r\nconst options = {\r\n  filter: true,\r\n  filterType: 'multiselect',\r\n  responsive: \"standard\",\r\n  fixedHeader: true,\r\n  expandableRows: true,\r\n  renderExpandableRow: (rowData, rowMeta) => {\r\n    console.log(rowData, rowMeta);\r\n    return (\r\n    //   <TableRow>\r\n    //   <TableCell />\r\n    //   <TableCell colSpan={2}>\r\n    //     <CorrelationSubTable\r\n    //       responseData = {responseData}\r\n    //       p_id = {rowData[0]}\r\n    //       dateFrom = {dateFrom}\r\n    //       dateTo = {dateTo}\r\n    //     />\r\n    //    </TableCell>\r\n    // </TableRow>\r\n    <TableRow>\r\n        <TableCell colSpan={rowData.length+1}>\r\n        <CorrelationSubTable\r\n      responseData = {responseData}\r\n      p_id = {rowData[0]}\r\n      dateFrom = {dateFrom}\r\n      dateTo = {dateTo}\r\n      EqID = {EqID}\r\n      ATAMain = {ATAMain}\r\n    />\r\n        </TableCell>\r\n        </TableRow>\r\n    \r\n    );\r\n  },\r\n  fixedSelectColumn: true,\r\n  downloadOptions: {\r\n    filename: 'Correlation Report from ' + dateFrom + ' to ' + dateTo + '.csv',\r\n    separator: ',',\r\n  },\r\n  draggableColumns: {\r\n    enabled: false,\r\n    transitionTime: 300,\r\n  },\r\n  elevation: 4,\r\n  rowsPerPage: 20,\r\n  rowsPerPageOptions: [20, 50],\r\n  selectToolbarPlacement:\"none\",\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {type: 'light'},\r\n  typography: {useNextVariants: true},\r\n});\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Paper className={classes.paper}>\r\n        <div className ={classes.card}>\r\n          <h2>Correlation Filters</h2>\r\n        </div>\r\n        <div className={classes.container}>\r\n        <Grid className={classes.Grid} container spacing={3}> \r\n          <Grid item xs={3}>     \r\n            <ATAMainSelector \r\n              handleATAChange = {handleATAChange}\r\n            />              \r\n          </Grid>     \r\n          <Grid item xs={3}>     \r\n            <EqIDSelector \r\n              handleEqIDChange = {handleEqIDChange}\r\n            />                   \r\n          </Grid>    \r\n          <Grid item xs={2}>      \r\n            <DatePicker \r\n              label = \"From\"\r\n              handleDateFrom = {handleDateFrom}\r\n            />   \r\n          </Grid>\r\n          <Grid item xs={2}>         \r\n            <DatePicker \r\n              label = \"To\"\r\n              handleDateTo = {handleDateTo}\r\n            />   \r\n          </Grid>\r\n          <Grid item xs={2}>  \r\n            <Button \r\n              variant=\"contained\" \r\n              onClick = {async()=>handleGeneratePMTable()}\r\n              className={classes.button}>\r\n                Generate Correlation Table\r\n            </Button>  \r\n          </Grid>     \r\n          </Grid>      \r\n          </div>\r\n      </Paper>\r\n        <Grid className={classes.TableGrid} container spacing={3}> \r\n          <Grid item xs={12}>\r\n            <MuiThemeProvider theme={theme}>\r\n              <MUIDataTable\r\n                title=\"PM Report\"\r\n                data={responseData}\r\n                columns={columns}\r\n                options={options}\r\n              />\r\n            </MuiThemeProvider> \r\n          </Grid> \r\n        </Grid> \r\n  </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default PMTable;\r\n\r\n","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Correlation\\CorrelationSubTable.js",["169","170","171","172"],"import React, {useState,useEffect} from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding:'5px',\r\n    margin:'auto',\r\n    width:'100%',\r\n  },\r\n}));\r\n\r\nconst CorrelationSubTable = (props) => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    /*http://localhost:8000/corelation/11-11-2020/11-12-2020/B1-008003/27*/\r\n\r\n    const path = 'http://localhost:8000/corelation/' + props.dateFrom + '/' + props.dateTo + '/' + props.EqID + '/' + props.ATAMain;\r\n    console.log(path);\r\n    console.log(props);\r\n    //const path = 'http://localhost:8000/corelation/2020-11-12/2020-12-13/('B1-005790','B1-005792','B1-005798','B1-005800')/('21','23','22','26','27','30','28')';\r\n    try{\r\n      axios.post(path).then(function (res) {\r\n        var data = JSON.parse(res.data);\r\n        setData(data);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    } \r\n  },[props.responseData])\r\n\r\n  const columns = [\r\n  {\r\n    name: \"p_id\",\r\n    label: \"p_id\",\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'operator', \r\n    label: 'Operator',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'model', \r\n    label: 'Model',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\r\n    }\r\n  },\r\n  {\r\n    name: 'type', \r\n    label: 'Type',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'serialNo', \r\n    label: 'Serial_No',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'date', \r\n    label: 'Date',\r\n    options: {\r\n      filter: false,\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'failureFlag', \r\n    label: 'Failure Flag',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'maintTrans', \r\n    label: 'MaintTrans',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n  },\r\n  {\r\n    name: 'maintCanc', \r\n    label: 'Maintenance Cancellations',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'maintDel', \r\n    label: 'Maintenance Delays',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\r\n    }\r\n    },\r\n    {\r\n    name: 'inspection', \r\n    label: 'Inspection',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'campType', \r\n    label: 'Camp Type',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'MRB', \r\n    label: 'MRB',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"100px\"}})\r\n    }\r\n    },\r\n    {\r\n    name: 'discrepancy', \r\n    label: 'Discrepancy',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'corActions', \r\n    label: 'Corrective Action',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'totalHours', \r\n    label: 'AC Total Hours',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'totalCycles', \r\n    label: 'AC Total Cycles',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'squawkSource', \r\n    label: 'Squawk Source',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'ATA', \r\n    label: 'ATA',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'station', \r\n    label: 'Station',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'ATA_SUB', \r\n    label: 'ATA SUB',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n    {\r\n    name: 'ATA_Main', \r\n    label: 'ATA Main',\r\n    options: {\r\n      filter: true,\r\n      filterType: 'dropdown',\r\n      sort: true,\r\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\r\n    }\r\n    },\r\n];\r\n\r\nconst responseData = [];\r\nif (data){\r\n  data.map((item => {\r\n    responseData.push(\r\n      {\r\n        p_id: item[\"p_id\"], \r\n        operator: item[\"Operator\"], \r\n        model: item[\"Model\"], \r\n        type: item[\"Type\"],  \r\n        serialNo: item[\"Serial_No\"],  \r\n        date: item[\"date\"],  \r\n        failureFlag: item[\"Failure Flag\"],  \r\n        maintTrans: item[\"Maint Trans\"],   \r\n        maintCanc: item[\"Maintenance Cancellations\"],   \r\n        maintDel: item[\"Maintenance Delays\"],  \r\n        inspection: item[\"Inspection\"],  \r\n        campType: item[\"Camp Type\"],   \r\n        MRB: item[\"MRB\"],   \r\n        discrepancy: item[\"Discrepancy\"],  \r\n        corActions: item[\"Corrective Action\"], \r\n        totalHours: item[\"AC Total Hours\"],  \r\n        totalCycles: item[\"AC Total Cycles\"],  \r\n        squawkSource:  item[\"Squawk Source\"],\r\n        ATA: item[\"ATA\"],\r\n        station: item[\"Station\"],\r\n        ATA_SUB: item[\"ATA_SUB\"],\r\n        ATA_Main: item[\"ATA_Main\"],\r\n      }\r\n    );\r\n     return responseData\r\n  }\r\n  ));\r\n\r\nconst options = {\r\n  filter: true,\r\n  filterType: 'multiselect',\r\n  responsive: \"standard\",\r\n  fixedHeader: true,\r\n  fixedSelectColumn: true,\r\n  downloadOptions: {\r\n    filename: 'Correlation Report from ' + props.dateFrom + ' to ' + props.dateTo + ' from '+ props.p_id +'.csv',\r\n    separator: ',',\r\n  },\r\n  draggableColumns: {\r\n    enabled: false,\r\n    transitionTime: 300,\r\n  },\r\n  elevation: 3,\r\n  rowsPerPage: 20,\r\n  rowsPerPageOptions: [20, 50],\r\n  selectToolbarPlacement:\"none\",\r\n};\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MUIDataTable\r\n        title={\"Correlation Report for PM \"+props.p_id+\" from \" + props.dateFrom + ' to ' + props.dateTo}\r\n        data={responseData}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n  </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default CorrelationSubTable;\r\n\r\n","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Stacked.js",["173","174","175","176"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(120),\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function Chart1() {\r\n  const classes = useStyles();\r\n  const ChartJsImage = require('chartjs-to-image');\r\n  const [chartData1, setChartData1] = useState({});\r\n  const [chartData2, setChartData2] = useState({});\r\n\r\n  let pmMessage = [];\r\n\r\n  const path='http://localhost:8000/scatter_chart_MDC_PM'\r\n  \r\n  axios.post(path)\r\n    .then(res => {\r\n      //console.log(res,\"response\");\r\n      \r\n      for (const dataObj of JSON.parse(res.data)) {\r\n        let mdc = parseInt(dataObj. MDC_Message_Cnt)\r\n        let pm = parseInt(dataObj.MX_actions)\r\n        pmMessage.push({\"x\": mdc, \"y\": pm})\r\n        \r\n      }\r\n      //console.log(mdcMessage);\r\n      setChartData2({\r\n        labels:pmMessage,\r\n        datasets: [\r\n          {\r\n            label:\"mdcMessage\",\r\n            data:pmMessage,\r\n            backgroundColor: \"#d8e4f0\",\r\n            borderWidth: 2,\r\n            borderColor: \"black\",\r\n            pointRadius: 5\r\n          }\r\n        ]\r\n      });\r\n    })\r\n    .catch(err => {\r\n      //console.log(err);\r\n    });\r\n \r\n \r\n  \r\n\r\n function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart1');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart1.png\")\r\n    })\r\n}\r\n\r\nconst [data_chart1, setData_chart1] = useState({\r\n  select_date:\"\"\r\n  });\r\n\r\n  function submit(e){\r\n    e.preventDefault();\r\n    let mdcMessage = [];\r\n    \r\n\r\n    const path='http://localhost:8000/scatter_chart_MDC_PM/'+data_chart1.select_date;\r\n    //console.log(path);\r\n    axios.post(path)\r\n      .then(res => {\r\n       // console.log(res,\"response\");\r\n        \r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          let mdc = parseInt(dataObj. MDC_Message_Cnt)\r\n          let pm = parseInt(dataObj.MX_actions)\r\n          mdcMessage.push({\"x\": mdc, \"y\": pm})\r\n         \r\n        }\r\n        console.log(mdcMessage);\r\n        setChartData1({\r\n          labels:mdcMessage,\r\n          datasets: [\r\n            {\r\n              label:\"mdcMessage\",\r\n              data: mdcMessage,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 2,\r\n              borderColor: \"black\",\r\n              pointRadius: 5\r\n\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n    \r\n  }\r\n  function handle(e){\r\n    const newdata={...data_chart1}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart1(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Grid container spacing={12}>\r\n      <Grid item xs={12}>\r\n      <Paper className={classes.paper}>\r\n      <Scatter\r\n                    id=\"chart1\"\r\n                    data={chartData2}\r\n                    options={{\r\n                      scales: {\r\n                        xAxes: [{\r\n                            type: 'linear',\r\n                            position: 'bottom'\r\n                        }],\r\n                      title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n                      legend: { display: true, position: 'right' }\r\n                    }}}\r\n                  />\r\n      </Paper>\r\n      <form className={classes.root1} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField  onChange= {(e)=>handle(e)} value={data_chart1.select_date} id=\"select_date\" label=\" SELECT DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\r\n            <br></br>\r\n            <div style={{ paddingBottom: \"20px\" }}><Button id=\"Button\" onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\r\n              <Button  onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\r\n          </form>\r\n          \r\n      \r\n                  <Paper className={classes.paper}>\r\n                  <Scatter\r\n                      id=\"chart1\"\r\n                      data={chartData1}\r\n                      options={{\r\n                        scales: {\r\n                          xAxes: [{\r\n                            type: 'linear',\r\n                            position: 'bottom'\r\n                          }],\r\n                          title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n                          legend: { display: true, position: 'right' }\r\n                        }\r\n                      }}\r\n                    />\r\n                    \r\n                 \r\n                    \r\n               </Paper>\r\n     \r\n     \r\n          {/* <Paper className={classes.paper}>\r\n            <Scatter\r\n             id=\"chart1\"\r\n            data={chartData1}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                }],\r\n              title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n              legend: { display: true, position: 'right' }\r\n            }}}\r\n          />\r\n          </Paper> */}\r\n         \r\n        </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\raymi\\Desktop\\MHIRJ-chart\\MHIRJ\\src\\Components\\Scatter1.js",["177","178","179"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(120),\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function Scatter1() {\r\n  const classes = useStyles();\r\n  const ChartJsImage = require('chartjs-to-image');\r\n  const [chartData1, setChartData1] = useState({});\r\n\r\n function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart1');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart1.png\")\r\n    })\r\n}\r\n\r\nconst [data_chart1, setData_chart1] = useState({\r\n  select_date:\"\"\r\n  });\r\n\r\n  function submit(e){\r\n    e.preventDefault();\r\n    let mdcMessage = [];\r\n    \r\n\r\n    const path='http://localhost:8000/scatter_chart_MDC_PM/'+data_chart1.select_date;\r\n    //console.log(path);\r\n    axios.post(path)\r\n      .then(res => {\r\n       // console.log(res,\"response\");\r\n        \r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          let mdc = parseInt(dataObj. MDC_Message_Cnt)\r\n          let pm = parseInt(dataObj.MX_actions)\r\n          mdcMessage.push({\"x\": mdc, \"y\": pm})\r\n         \r\n        }\r\n        console.log(mdcMessage);\r\n        setChartData1({\r\n          labels:mdcMessage,\r\n          datasets: [\r\n            {\r\n              label:\"Fleet Status- Last 7 days\",\r\n              data: mdcMessage,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 2,\r\n              borderColor: \"black\",\r\n              pointRadius: 5\r\n\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n    \r\n  }\r\n  function handle(e){\r\n    const newdata={...data_chart1}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart1(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Grid container spacing={12}>\r\n      <Grid item xs={12}>\r\n      {/* <Paper className={classes.paper}>\r\n      <Scatter\r\n                    id=\"chart1\"\r\n                    data={chartData2}\r\n                    options={{\r\n                      scales: {\r\n                        xAxes: [{\r\n                            type: 'linear',\r\n                            position: 'bottom'\r\n                        }],\r\n                      title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n                      legend: { display: true, position: 'right' }\r\n                    }}}\r\n                  />\r\n      </Paper> */}\r\n      <form className={classes.root1} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField  onChange= {(e)=>handle(e)} value={data_chart1.select_date} id=\"select_date\" label=\" SELECT DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\r\n            <br></br>\r\n            <div style={{ paddingBottom: \"20px\" }}><Button id=\"Button\" onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\r\n              <Button  onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\r\n          </form>\r\n          \r\n      \r\n                  <Paper className={classes.paper}>\r\n                  <Scatter\r\n                      id=\"chart1\"\r\n                      data={chartData1}\r\n                      options={{\r\n                        scales: {\r\n                          xAxes: [{\r\n                            type: 'linear',\r\n                            position: 'bottom',\r\n                            scaleLabel: {\r\n                              display: true,\r\n                              labelString: '# of MDC Messages- Last 7 days',\r\n                                  fontStyle: 'bold',\r\n                                  fontColor: '#001C3E'\r\n                                \r\n                            },\r\n                          }],\r\n                          yAxes: [ {\r\n                            display: true,\r\n                            scaleLabel: {\r\n                              display: true,\r\n                              labelString: '# of MX Actions- Last 7 days',\r\n                              fontStyle: 'bold',\r\n                                    fontColor: '#001C3E'\r\n                            }\r\n                          } ],\r\n                          title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n                          legend: { display: true, position: 'right' }\r\n                        }\r\n                      }}\r\n                    />\r\n                    \r\n                 \r\n                    \r\n               </Paper>\r\n     \r\n     \r\n          {/* <Paper className={classes.paper}>\r\n            <Scatter\r\n             id=\"chart1\"\r\n            data={chartData1}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                }],\r\n              title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n              legend: { display: true, position: 'right' }\r\n            }}}\r\n          />\r\n          </Paper> */}\r\n         \r\n        </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":18},{"ruleId":"184","severity":1,"message":"188","line":25,"column":8,"nodeType":"186","messageId":"187","endLine":25,"endColumn":21},{"ruleId":"184","severity":1,"message":"189","line":39,"column":8,"nodeType":"186","messageId":"187","endLine":39,"endColumn":12},{"ruleId":"184","severity":1,"message":"190","line":46,"column":8,"nodeType":"186","messageId":"187","endLine":46,"endColumn":15},{"ruleId":"184","severity":1,"message":"191","line":204,"column":10,"nodeType":"186","messageId":"187","endLine":204,"endColumn":14},{"ruleId":"184","severity":1,"message":"192","line":215,"column":9,"nodeType":"186","messageId":"187","endLine":215,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":253,"column":11,"nodeType":"195","endLine":253,"endColumn":76},{"ruleId":"196","severity":1,"message":"197","line":344,"column":59,"nodeType":"198","endLine":344,"endColumn":65},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"200","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"201","line":5,"column":30,"nodeType":"186","messageId":"187","endLine":5,"endColumn":34},{"ruleId":"184","severity":1,"message":"202","line":33,"column":9,"nodeType":"186","messageId":"187","endLine":33,"endColumn":21},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"202","line":30,"column":9,"nodeType":"186","messageId":"187","endLine":30,"endColumn":21},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"200","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"203","line":5,"column":15,"nodeType":"186","messageId":"187","endLine":5,"endColumn":28},{"ruleId":"184","severity":1,"message":"204","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":16},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"200","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"203","line":5,"column":15,"nodeType":"186","messageId":"187","endLine":5,"endColumn":28},{"ruleId":"184","severity":1,"message":"204","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":16},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"200","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"203","line":5,"column":15,"nodeType":"186","messageId":"187","endLine":5,"endColumn":28},{"ruleId":"184","severity":1,"message":"204","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":16},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"200","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"201","line":5,"column":30,"nodeType":"186","messageId":"187","endLine":5,"endColumn":34},{"ruleId":"184","severity":1,"message":"204","line":10,"column":10,"nodeType":"186","messageId":"187","endLine":10,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":127,"column":6,"nodeType":"207","endLine":127,"endColumn":14,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":151,"column":44,"nodeType":"211","messageId":"212","endLine":151,"endColumn":46},{"ruleId":"184","severity":1,"message":"213","line":1,"column":15,"nodeType":"186","messageId":"187","endLine":1,"endColumn":23},{"ruleId":"184","severity":1,"message":"214","line":18,"column":9,"nodeType":"186","messageId":"187","endLine":18,"endColumn":16},{"ruleId":"205","severity":1,"message":"215","line":155,"column":3,"nodeType":"207","endLine":155,"endColumn":22,"suggestions":"216"},{"ruleId":"184","severity":1,"message":"217","line":11,"column":10,"nodeType":"186","messageId":"187","endLine":11,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":73,"column":38,"nodeType":"211","messageId":"212","endLine":73,"endColumn":40},{"ruleId":"209","severity":1,"message":"210","line":125,"column":38,"nodeType":"211","messageId":"212","endLine":125,"endColumn":40},{"ruleId":"218","severity":1,"message":"219","line":174,"column":27,"nodeType":"220","messageId":"221","endLine":174,"endColumn":29},{"ruleId":"184","severity":1,"message":"222","line":23,"column":10,"nodeType":"186","messageId":"187","endLine":23,"endColumn":18},{"ruleId":"184","severity":1,"message":"223","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":20},{"ruleId":"184","severity":1,"message":"199","line":1,"column":25,"nodeType":"186","messageId":"187","endLine":1,"endColumn":34},{"ruleId":"184","severity":1,"message":"224","line":70,"column":23,"nodeType":"186","messageId":"187","endLine":70,"endColumn":38},{"ruleId":"184","severity":1,"message":"225","line":3,"column":9,"nodeType":"186","messageId":"187","endLine":3,"endColumn":25},{"ruleId":"184","severity":1,"message":"226","line":3,"column":27,"nodeType":"186","messageId":"187","endLine":3,"endColumn":41},{"ruleId":"184","severity":1,"message":"227","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":12},{"ruleId":"205","severity":1,"message":"228","line":36,"column":5,"nodeType":"207","endLine":36,"endColumn":25,"suggestions":"229"},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"202","line":33,"column":9,"nodeType":"186","messageId":"187","endLine":33,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":46,"column":28,"nodeType":"232","messageId":"233","endLine":46,"endColumn":52,"fix":"234"},{"ruleId":"230","severity":1,"message":"231","line":97,"column":30,"nodeType":"232","messageId":"233","endLine":97,"endColumn":54,"fix":"235"},{"ruleId":"184","severity":1,"message":"199","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"202","line":33,"column":9,"nodeType":"186","messageId":"187","endLine":33,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":60,"column":30,"nodeType":"232","messageId":"233","endLine":60,"endColumn":54,"fix":"236"},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'ListSubheader' is defined but never used.","'Corr' is defined but never used.","'Stacked' is defined but never used.","'page' is assigned a value but never used.","'handleOnClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'Bar' is defined but never used.","'Line' is defined but never used.","'ChartJsImage' is assigned a value but never used.","'HorizontalBar' is defined but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.reportConditions.analysis'. Either include it or remove the dependency array.","ArrayExpression",["239"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isValid'. Either include it or remove the dependency array.",["240"],"'useHistory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'flagList' is assigned a value but never used.","'DateFnsUtils' is defined but never used.","'setResponseData' is assigned a value but never used.","'MuiThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["241"],"no-whitespace-before-property","Unexpected whitespace before property MDC_Message_Cnt.","MemberExpression","unexpectedWhitespace",{"range":"242","text":"243"},{"range":"244","text":"243"},{"range":"245","text":"243"},"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},[1234,1236],".",[2436,2438],[1568,1570],"Update the dependencies array to be: [props.reportConditions.analysis, report]",{"range":"252","text":"253"},"Update the dependencies array to be: [isValid, rawDataConditions]",{"range":"254","text":"255"},"Update the dependencies array to be: [props, props.responseData]",{"range":"256","text":"257"},[4395,4403],"[props.reportConditions.analysis, report]",[3946,3965],"[isValid, rawDataConditions]",[1195,1215],"[props, props.responseData]"]