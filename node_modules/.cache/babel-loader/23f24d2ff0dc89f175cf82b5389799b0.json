{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymi\\\\Desktop\\\\MHIRJ-chart\\\\MHIRJ\\\\src\\\\Components\\\\MdcMessages\\\\Reports\\\\Rawdata\\\\RawMdcMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport RawDataTable from './RawDataTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport DatePicker from '../../GenerateReport/DatePicker';\nimport { AirlineOperatorSelector, ATAMainSelector, MessagesSelector, EqIDSelector } from '../../GenerateReport/Selectors'; //Buttons Imports\n\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\"; //Axios Imports \n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1) // width: '25ch',\n      // marginBottom:20,\n\n    }\n  },\n  paper: {\n    margin: '50px auto 20px',\n    width: '92vw'\n  },\n  card: {\n    backgroundColor: \"#C5D3E0\",\n    textAlign: 'center',\n    justify: 'center',\n    padding: '5px'\n  },\n  Grid: {\n    margin: 'auto',\n    padding: '20px 20px 20px 50px'\n  },\n  button: {\n    margin: '50px 30px',\n    // height:'40px',\n    padding: '10px',\n    backgroundColor: \"#C5D3E0\"\n  },\n  EqSelector: {\n    marginTop: '9px',\n    marginRight: '0px',\n    width: '100px'\n  },\n  ATASelector: {// marginTop:'9px',\n  },\n  h3: {\n    marginLeft: '5px',\n    fontSize: '20px'\n  }\n}));\n\nconst RawMdcMessages = () => {\n  _s();\n\n  const classes = useStyles(); // ----- States and handle Functions for Date  ----- \n\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n\n  const handleDateFrom = date => {\n    setDateFrom(date);\n  };\n\n  const handleDateTo = date => {\n    setDateTo(date);\n  }; // ----- States and handle Functions for Selects  ----- \n\n\n  const [airline, setAilineType] = useState();\n  const [ATAMain, setATAMain] = React.useState('');\n  const [messagesChoice, setIncludeMessages] = React.useState('');\n  const [EqID, setEqID] = React.useState('');\n\n  const handleAirlineChange = Airline => {\n    setAilineType(Airline);\n  };\n\n  const handleATAChange = ATA => {\n    setATAMain(\"('\" + ATA.join(\"','\") + \"')\");\n  };\n\n  const handleMessagesChange = messages => {\n    setIncludeMessages(messages);\n  };\n\n  const handleEqIDChange = eqIDList => {\n    setEqID(\"('\" + eqIDList.join(\"','\") + \"')\");\n  }; // ----- States and handle Functions for Generate Report  ----- \n\n\n  const [rawDataConditions, setRawDataConditions] = React.useState({\n    operator: '',\n    ata: '',\n    eqID: '',\n    messages: '',\n    fromDate: '',\n    toDate: ''\n  });\n  const [rawData, setRawData] = React.useState('');\n  const [isValid, setIsValid] = React.useState(false);\n  const history = useHistory();\n\n  const handleGenerateReport = event => {\n    setRawDataConditions({\n      operator: airline,\n      ata: ATAMain,\n      eqID: EqID,\n      messages: messagesChoice,\n      fromDate: dateFrom,\n      toDate: dateTo\n    });\n    let flag = isValid;\n\n    for (const item in rawDataConditions) {\n      if (Object.hasOwnProperty.call(rawDataConditions, item)) {\n        const element = rawDataConditions[item];\n\n        if (element !== false) {\n          flag = true;\n        } else {\n          flag = false;\n          break;\n        }\n      }\n    }\n\n    setIsValid(flag);\n\n    if (flag === true) {\n      console.log(rawDataConditions); ///MDCRawData/{ATAMain_list}/{exclude_EqID_list}/{fromDate}/{toDate}\"\n      //http://localhost:8000/MDCRawData/('32','22')/('B1-007553','B1-246748')/skw/0/2020-11-05/2020-11-12\n\n      const path = 'http://localhost:8000/MDCRawData/' + rawDataConditions.ata + '/' + rawDataConditions.eqID + '/' + rawDataConditions.operator + '/' + rawDataConditions.messages + '/' + rawDataConditions.fromDate + '/' + rawDataConditions.toDate;\n\n      try {\n        axios.post(path).then(function (res) {\n          // console.log(res);\n          var data = JSON.parse(res.data);\n          setRawData(data);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"RAW DATA FILTERS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.Grid,\n          container: true,\n          spacing: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(AirlineOperatorSelector, {\n              handleAirlineChange: handleAirlineChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MessagesSelector, {\n              handleMessagesChange: handleMessagesChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.ATASelector,\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(ATAMainSelector, {\n              handleATAChange: handleATAChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(EqIDSelector, {\n              handleEqIDChange: handleEqIDChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"From\",\n              handleDateFrom: handleDateFrom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"To\",\n              handleDateTo: handleDateTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => handleGenerateReport(),\n              className: classes.button,\n              children: \"Filter Raw Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(RawDataTable, {\n      data: rawData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RawMdcMessages, \"mKO+2K8FISIMRPDVcwgLaV5LM1M=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = RawMdcMessages;\nexport default RawMdcMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"RawMdcMessages\");","map":{"version":3,"sources":["C:/Users/raymi/Desktop/MHIRJ-chart/MHIRJ/src/Components/MdcMessages/Reports/Rawdata/RawMdcMessages.js"],"names":["React","useState","RawDataTable","makeStyles","Grid","Paper","DatePicker","AirlineOperatorSelector","ATAMainSelector","MessagesSelector","EqIDSelector","Button","useHistory","axios","useStyles","theme","root","flexGrow","form","margin","spacing","paper","width","card","backgroundColor","textAlign","justify","padding","button","EqSelector","marginTop","marginRight","ATASelector","h3","marginLeft","fontSize","RawMdcMessages","classes","dateFrom","setDateFrom","dateTo","setDateTo","handleDateFrom","date","handleDateTo","airline","setAilineType","ATAMain","setATAMain","messagesChoice","setIncludeMessages","EqID","setEqID","handleAirlineChange","Airline","handleATAChange","ATA","join","handleMessagesChange","messages","handleEqIDChange","eqIDList","rawDataConditions","setRawDataConditions","operator","ata","eqID","fromDate","toDate","rawData","setRawData","isValid","setIsValid","history","handleGenerateReport","event","flag","item","Object","hasOwnProperty","call","element","console","log","path","post","then","res","data","JSON","parse","err","error"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport RawDataTable from './RawDataTable';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DatePicker from '../../GenerateReport/DatePicker';\r\nimport {AirlineOperatorSelector,ATAMainSelector,MessagesSelector,EqIDSelector} from '../../GenerateReport/Selectors';\r\n//Buttons Imports\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n//Axios Imports \r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  form:{\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      // width: '25ch',\r\n      // marginBottom:20,\r\n  },\r\n},\r\n  paper: {\r\n    margin: '50px auto 20px',\r\n    width: '92vw',\r\n  },\r\n  card:{\r\n    backgroundColor: \"#C5D3E0\",\r\n    textAlign: 'center',\r\n    justify: 'center',\r\n    padding: '5px',\r\n  },\r\n  Grid:{\r\n    margin: 'auto',\r\n    padding:'20px 20px 20px 50px',\r\n  },\r\n  button:{\r\n    margin:'50px 30px',\r\n    // height:'40px',\r\n    padding: '10px',\r\n    backgroundColor:\"#C5D3E0\",\r\n  },\r\n  EqSelector:{\r\n    marginTop:'9px',\r\n    marginRight:'0px',\r\n    width:'100px',\r\n  },\r\n  ATASelector:{\r\n    // marginTop:'9px',\r\n  },\r\n  h3:{\r\n    marginLeft: '5px',\r\n    fontSize:'20px',\r\n  },\r\n}));\r\n\r\nconst RawMdcMessages = () => {\r\n  const classes = useStyles();\r\n\r\n  // ----- States and handle Functions for Date  ----- \r\n  const [dateFrom, setDateFrom] = useState();\r\n  const [dateTo, setDateTo] = useState();\r\n\r\n  const handleDateFrom = (date) => {\r\n    setDateFrom(date);\r\n  };\r\n\r\n  const handleDateTo = (date) => {\r\n    setDateTo(date);\r\n  };\r\n// ----- States and handle Functions for Selects  ----- \r\nconst [airline, setAilineType] = useState();\r\nconst [ATAMain, setATAMain] = React.useState('');\r\nconst [messagesChoice, setIncludeMessages] = React.useState('');\r\nconst [EqID, setEqID] = React.useState('');\r\n\r\nconst handleAirlineChange = (Airline) => {\r\n  setAilineType(Airline);\r\n};\r\n\r\nconst handleATAChange = (ATA) => {\r\n  setATAMain(\"('\"+ ATA.join(\"','\") +\"')\");\r\n};\r\n\r\nconst handleMessagesChange = (messages) => {\r\n  setIncludeMessages(messages);\r\n};\r\n\r\nconst handleEqIDChange = (eqIDList) => {\r\n  setEqID(\"('\"+ eqIDList.join(\"','\") +\"')\");\r\n};\r\n// ----- States and handle Functions for Generate Report  ----- \r\n\r\nconst [rawDataConditions, setRawDataConditions] = React.useState(\r\n  {\r\n    operator: '',\r\n    ata: '',\r\n    eqID: '',\r\n    messages: '',\r\n    fromDate: '',\r\n    toDate: '',\r\n  }\r\n );\r\nconst [rawData, setRawData] = React.useState('');\r\nconst [isValid, setIsValid] = React.useState(false);\r\n\r\nconst history = useHistory();\r\n\r\nconst handleGenerateReport = (event) => {\r\n\r\n  setRawDataConditions(\r\n      {\r\n        operator: airline,\r\n        ata: ATAMain,\r\n        eqID: EqID,\r\n        messages: messagesChoice,\r\n        fromDate: dateFrom,\r\n        toDate: dateTo,\r\n      },\r\n    );\r\n\r\n    let flag = isValid;\r\n    for (const item in rawDataConditions) {\r\n      if (Object.hasOwnProperty.call(rawDataConditions, item)) {\r\n        const element = rawDataConditions[item];\r\n        if ( element !== false ) {\r\n          flag = true;\r\n        } else {\r\n          flag = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setIsValid(flag);\r\n\r\n  if (flag === true) {  \r\n    console.log(rawDataConditions);\r\n    ///MDCRawData/{ATAMain_list}/{exclude_EqID_list}/{fromDate}/{toDate}\"\r\n    //http://localhost:8000/MDCRawData/('32','22')/('B1-007553','B1-246748')/skw/0/2020-11-05/2020-11-12\r\n    \r\n    const path = 'http://localhost:8000/MDCRawData/' + rawDataConditions.ata + '/' + rawDataConditions.eqID + '/' + rawDataConditions.operator + \r\n    '/' + rawDataConditions.messages + '/' + rawDataConditions.fromDate + '/' + rawDataConditions.toDate;\r\n\r\n    try{\r\n      axios.post(path).then(function (res) {\r\n        // console.log(res);\r\n        var data = JSON.parse(res.data);\r\n          setRawData(data);\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n} \r\n\r\n  return (\r\n    <div className={classes.root}>   \r\n     <form className={classes.form}>\r\n      <Paper className={classes.paper}>\r\n        <div className ={classes.card}>\r\n          <h2>RAW DATA FILTERS</h2>\r\n        </div>\r\n         <Grid className={classes.Grid} container spacing={0}> \r\n            <Grid item xs={2}>\r\n            <AirlineOperatorSelector\r\n                handleAirlineChange = {handleAirlineChange}                \r\n              />     \r\n              <MessagesSelector \r\n                handleMessagesChange = {handleMessagesChange}\r\n              />\r\n            </Grid>\r\n            <Grid className={classes.ATASelector} item xs={6}>\r\n            <ATAMainSelector \r\n                handleATAChange = {handleATAChange}\r\n              /> \r\n              <EqIDSelector \r\n                handleEqIDChange = {handleEqIDChange}\r\n              />   \r\n            </Grid>\r\n            <Grid item xs={2}>\r\n            <DatePicker \r\n              label = \"From\"\r\n              handleDateFrom = {handleDateFrom}\r\n            />   \r\n            <DatePicker \r\n              label = \"To\"\r\n              handleDateTo = {handleDateTo}\r\n            /> \r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button \r\n                variant=\"contained\" \r\n                onClick = {()=>handleGenerateReport()}\r\n                className={classes.button}>\r\n                  Filter Raw Data\r\n              </Button>                 \r\n            </Grid>\r\n          </Grid>\r\n     </Paper>\r\n     </form>\r\n     <RawDataTable\r\n       data = {rawData}\r\n     />\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default RawMdcMessages;"]},"metadata":{},"sourceType":"module"}