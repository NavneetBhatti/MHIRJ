{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymi\\\\Desktop\\\\MHIRJ-chart\\\\MHIRJ\\\\src\\\\Components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Chart1() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n  let pmMessage = [];\n  const path = 'http://localhost:8000/scatter_chart_MDC_PM';\n  axios.post(path).then(res => {\n    console.log(res, \"response\");\n\n    for (const dataObj of JSON.parse(res.data)) {\n      let mdc = parseInt(dataObj.MDC_Message_Cnt);\n      let pm = parseInt(dataObj.MX_actions);\n      pmMessage.push({\n        \"x\": mdc,\n        \"y\": pm\n      });\n    }\n\n    setChartData2({\n      labels: pmMessage,\n      datasets: [{\n        label: \"mdcMessage\",\n        data: pmMessage,\n        backgroundColor: \"#d8e4f0\",\n        borderWidth: 2,\n        borderColor: \"black\"\n      }]\n    });\n  }).catch(err => {//console.log(err);\n  });\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart1.png\");\n    });\n  }\n\n  function submit(e) {\n    e.preventDefault();\n    let mdcMessage = [];\n    let pmMessage = [];\n    const path = 'http://localhost:8000/scatter_chart_MDC_PM';\n    axios.post(path).then(res => {\n      console.log(res, \"response\");\n\n      for (const dataObj of JSON.parse(res.data)) {\n        let mdc = parseInt(dataObj.MDC_Message_Cnt);\n        let pm = parseInt(dataObj.MX_actions);\n        mdcMessage.push({\n          \"x\": mdc,\n          \"y\": pm\n        });\n      }\n\n      setChartData1({\n        labels: mdcMessage,\n        datasets: [{\n          label: \"mdcMessage\",\n          data: mdcMessage,\n          backgroundColor: \"#d8e4f0\",\n          borderWidth: 2,\n          borderColor: \"black\"\n        }]\n      });\n    }).catch(err => {//console.log(err);\n    }); //console.log(msgName, messageOcc);\n  }\n\n  function handle(e) {\n    const newdata = { ...data_chart1\n    };\n    newdata[e.target.id] = e.target.value;\n    setData_chart1(newdata); //console.log(newdata)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Scatter, {\n            data: chartData2,\n            options: {\n              scales: {\n                xAxes: [{\n                  type: 'linear',\n                  position: 'bottom'\n                }],\n                title: {\n                  display: true,\n                  text: 'Scatter Plot',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              value: data_chart1.select_date,\n              id: \"select_date\",\n              label: \" SELECT DATE \",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => submit(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \"GENERATE  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => save(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Scatter, {\n            id: \"chart1\",\n            data: chartData1,\n            options: {\n              scales: {\n                xAxes: [{\n                  type: 'linear',\n                  position: 'bottom'\n                }],\n                title: {\n                  display: true,\n                  text: 'Scatter Plot',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart1, \"tAlfpxUsEm0fFOeQBFzh6zV6+Bw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chart1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart1\");","map":{"version":3,"sources":["C:/Users/raymi/Desktop/MHIRJ-chart/MHIRJ/src/Components/Home.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","Scatter","TextField","Button","saveAs","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Chart1","classes","ChartJsImage","require","chartData1","setChartData1","chartData2","setChartData2","pmMessage","path","post","then","res","console","log","dataObj","JSON","parse","data","mdc","parseInt","MDC_Message_Cnt","pm","MX_actions","push","labels","datasets","label","backgroundColor","borderWidth","borderColor","catch","err","data_chart1","setData_chart1","from_date","to_date","save","e","canvasSave","document","getElementById","toBlob","blob","submit","preventDefault","mdcMessage","handle","newdata","target","id","value","scales","xAxes","type","position","title","display","fontSize","legend","root1","select_date","textField","shrink","paddingBottom","float","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Scatter } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveAs } from 'file-saver';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(120),\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function Chart1() {\r\n  const classes = useStyles();\r\n  const ChartJsImage = require('chartjs-to-image');\r\n  const [chartData1, setChartData1] = useState({});\r\n  const [chartData2, setChartData2] = useState({});\r\n\r\n  let pmMessage = [];\r\n\r\n  const path='http://localhost:8000/scatter_chart_MDC_PM'\r\n  \r\n  axios.post(path)\r\n    .then(res => {\r\n      console.log(res,\"response\");\r\n      \r\n      for (const dataObj of JSON.parse(res.data)) {\r\n        let mdc = parseInt(dataObj. MDC_Message_Cnt)\r\n        let pm = parseInt(dataObj.MX_actions)\r\n        pmMessage.push({\"x\": mdc,\r\n                     \"y\": pm})\r\n        \r\n      }\r\n      setChartData2({\r\n        labels:pmMessage,\r\n        datasets: [\r\n          {\r\n            label:\"mdcMessage\",\r\n            data:pmMessage,\r\n            backgroundColor: \"#d8e4f0\",\r\n            borderWidth: 2,\r\n            borderColor: \"black\"\r\n          }\r\n        ]\r\n      });\r\n    })\r\n    .catch(err => {\r\n      //console.log(err);\r\n    });\r\n \r\n \r\n  const [data_chart1, setData_chart1] = useState({\r\n    from_date:\"\",\r\n    to_date:\"\"\r\n  });\r\n\r\n function save(e) {\r\n    //save to png\r\n    const canvasSave = document.getElementById('chart1');\r\n    canvasSave.toBlob(function (blob) {\r\n        saveAs(blob, \"Chart1.png\")\r\n    })\r\n}\r\n\r\n\r\n  function submit(e){\r\n    e.preventDefault();\r\n    let mdcMessage = [];\r\n    let pmMessage = [];\r\n\r\n    const path='http://localhost:8000/scatter_chart_MDC_PM'\r\n    \r\n    axios.post(path)\r\n      .then(res => {\r\n        console.log(res,\"response\");\r\n        \r\n        for (const dataObj of JSON.parse(res.data)) {\r\n          let mdc = parseInt(dataObj. MDC_Message_Cnt)\r\n          let pm = parseInt(dataObj.MX_actions)\r\n          mdcMessage.push({\"x\": mdc,\r\n                       \"y\": pm})\r\n          \r\n        }\r\n        setChartData1({\r\n          labels:mdcMessage,\r\n          datasets: [\r\n            {\r\n              label:\"mdcMessage\",\r\n              data:mdcMessage,\r\n              backgroundColor: \"#d8e4f0\",\r\n              borderWidth: 2,\r\n              borderColor: \"black\"\r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n        //console.log(err);\r\n      });\r\n    //console.log(msgName, messageOcc);\r\n  }\r\n  function handle(e){\r\n    const newdata={...data_chart1}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart1(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={12}>\r\n      <Grid item xs={12}>\r\n      <Paper className={classes.paper}>\r\n            <Scatter\r\n            data={chartData2}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                }],\r\n              title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n              legend: { display: true, position: 'right' }\r\n            }}}\r\n          />\r\n          </Paper>\r\n      <form className={classes.root1} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField  onChange= {(e)=>handle(e)} value={data_chart1.select_date} id=\"select_date\" label=\" SELECT DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\r\n            <br></br>\r\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\r\n              <Button  onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\r\n          </form>\r\n          <Paper className={classes.paper}>\r\n            <Scatter\r\n             id=\"chart1\"\r\n            data={chartData1}\r\n            options={{\r\n              scales: {\r\n                xAxes: [{\r\n                    type: 'linear',\r\n                    position: 'bottom'\r\n                }],\r\n              title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n              legend: { display: true, position: 'right' }\r\n            }}}\r\n          />\r\n          </Paper>\r\n         \r\n        </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}