{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymi\\\\Desktop\\\\MHIRJ-chart\\\\MHIRJ\\\\src\\\\Components\\\\MdcMessages\\\\GenerateReport\\\\AnalysisInput.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OccurencesInput = props => {\n  _s();\n\n  const [occurences, setOccurrences] = React.useState('0');\n\n  const handleOccurencesChange = event => {\n    event.target.value < 0 ? setOccurrences(event.target.value = 0) : setOccurrences(event.target.value);\n    props.handleOccurencesChange(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField // id=\"outlined-number\"\n  , {\n    label: \"Max Allowed Occurences\",\n    type: \"number\",\n    onChange: handleOccurencesChange,\n    value: occurences,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OccurencesInput, \"dszEn7QMNJfGN2Vm3H2tRaMehpY=\");\n\n_c = OccurencesInput;\nexport const LegsInput = props => {\n  _s2();\n\n  const [legs, setLegs] = React.useState('0');\n\n  const handleLegsChange = event => {\n    event.target.value < 0 ? setLegs(event.target.value = 0) : setLegs(event.target.value);\n    props.handleLegsChange(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField // id=\"outlined-number\"\n  , {\n    label: \"Max Consecutive Legs\",\n    type: \"number\",\n    onChange: handleLegsChange,\n    value: legs,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LegsInput, \"5jUxnpUdJKtHuoGpTiUyzO3ROxI=\");\n\n_c2 = LegsInput;\nexport const IntermittentInput = props => {\n  _s3();\n\n  const [intermittent, setIntermittent] = React.useState('0');\n\n  const handleIntermittentChange = event => {\n    event.target.value < 0 ? setIntermittent(event.target.value = 0) : setIntermittent(event.target.value);\n    props.handleIntermittentChange(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField // id=\"outlined-number\"\n  , {\n    label: \"Max Allowed Intermittent\",\n    type: \"number\",\n    onChange: handleIntermittentChange,\n    value: intermittent,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(IntermittentInput, \"RoSV0NwxQ3oUOIMvMlUGJBMdmnM=\");\n\n_c3 = IntermittentInput;\nexport const DaysInput = props => {\n  _s4();\n\n  const [days, setDays] = React.useState('0');\n  const [disabled, setDisabled] = React.useState('');\n\n  const handleDaysChange = event => {\n    event.target.value < 0 ? setDays(event.target.value = 0) : setDays(event.target.value);\n    props.handleDaysChange(event.target.value);\n  };\n\n  useEffect(() => {\n    if (props.analysis === 'daily') {\n      setDisabled(prevState => ({\n        disabled: true\n      }));\n    } else {\n      setDisabled(prevState => ({\n        disabled: false\n      }));\n    }\n  }, [props.analysis]);\n  return /*#__PURE__*/_jsxDEV(TextField, { ...disabled,\n    // id=\"outlined-number\"\n    label: \"Max Consecutive Days\",\n    type: \"number\",\n    onChange: handleDaysChange,\n    value: days,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(DaysInput, \"D2/5rVXEJezT/HVgs1dftLG/rkM=\");\n\n_c4 = DaysInput;\n\nconst AnalysisInput = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = AnalysisInput;\nexport default AnalysisInput;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"OccurencesInput\");\n$RefreshReg$(_c2, \"LegsInput\");\n$RefreshReg$(_c3, \"IntermittentInput\");\n$RefreshReg$(_c4, \"DaysInput\");\n$RefreshReg$(_c5, \"AnalysisInput\");","map":{"version":3,"sources":["C:/Users/raymi/Desktop/MHIRJ-chart/MHIRJ/src/Components/MdcMessages/GenerateReport/AnalysisInput.js"],"names":["React","useEffect","TextField","OccurencesInput","props","occurences","setOccurrences","useState","handleOccurencesChange","event","target","value","shrink","LegsInput","legs","setLegs","handleLegsChange","IntermittentInput","intermittent","setIntermittent","handleIntermittentChange","DaysInput","days","setDays","disabled","setDisabled","handleDaysChange","analysis","prevState","AnalysisInput"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const OccurencesInput = (props) => {\r\n  const [occurences, setOccurrences] = React.useState('0');\r\n  const handleOccurencesChange = (event) => {\r\n    event.target.value < 0 \r\n  ?  setOccurrences(event.target.value = 0) \r\n  :  setOccurrences(event.target.value);\r\n    props.handleOccurencesChange(event.target.value);\r\n  };\r\n\r\n  return(\r\n    <TextField\r\n      // id=\"outlined-number\"\r\n      label=\"Max Allowed Occurences\"\r\n      type=\"number\"\r\n      onChange = {handleOccurencesChange}\r\n      value = {occurences}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n}\r\nexport const LegsInput = (props) => {\r\n  const [legs, setLegs] = React.useState('0');\r\n  const handleLegsChange = (event) => {\r\n    event.target.value < 0 \r\n  ?  setLegs(event.target.value = 0) \r\n  :  setLegs(event.target.value);\r\n    props.handleLegsChange(event.target.value);\r\n  };\r\n\r\n  return(\r\n    <TextField\r\n    // id=\"outlined-number\"\r\n    label=\"Max Consecutive Legs\"\r\n    type=\"number\"\r\n    onChange = {handleLegsChange}\r\n    value = {legs}\r\n    InputLabelProps={{\r\n      shrink: true,\r\n    }}\r\n    variant=\"outlined\"\r\n  />\r\n  );\r\n}\r\nexport const IntermittentInput = (props) => {\r\n  const [intermittent, setIntermittent] = React.useState('0');\r\n  const handleIntermittentChange = (event) => {\r\n    event.target.value < 0 \r\n    ?  setIntermittent(event.target.value = 0) \r\n    :  setIntermittent(event.target.value);\r\n    props.handleIntermittentChange(event.target.value);\r\n  };\r\n  return(\r\n    <TextField\r\n      // id=\"outlined-number\"\r\n      label=\"Max Allowed Intermittent\"\r\n      type=\"number\"\r\n      onChange = {handleIntermittentChange}\r\n      value = {intermittent}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n}\r\nexport const DaysInput = (props) => {\r\n  const [days, setDays] = React.useState('0');\r\n  const [disabled, setDisabled] = React.useState('');\r\n\r\n  const handleDaysChange = (event) => {\r\n    event.target.value < 0 \r\n    ?  setDays(event.target.value = 0) \r\n    :  setDays(event.target.value);\r\n    props.handleDaysChange(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (props.analysis === 'daily'){\r\n      setDisabled(prevState => ({ disabled: true}));\r\n    }\r\n    else {\r\n      setDisabled(prevState => ({  disabled: false}));\r\n    }    \r\n  }, [props.analysis]);\r\n\r\n  return(\r\n    <TextField\r\n      {...disabled}\r\n      // id=\"outlined-number\"\r\n      label=\"Max Consecutive Days\"\r\n      type=\"number\"\r\n      onChange = {handleDaysChange}\r\n      value = {days}\r\n      InputLabelProps={{\r\n        shrink: true,       \r\n      }}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n}\r\nconst AnalysisInput = (props) => {\r\n  return (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default AnalysisInput;"]},"metadata":{},"sourceType":"module"}