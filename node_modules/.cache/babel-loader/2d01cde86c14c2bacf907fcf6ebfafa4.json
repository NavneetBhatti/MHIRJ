{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymi\\\\Desktop\\\\MHIRJ-chart\\\\MHIRJ\\\\src\\\\Components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter, HorizontalBar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Chart1() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData2, setChartData2] = useState({});\n  const [chartData3, setChartData3] = useState({});\n  let pmMessage = [];\n  const path = 'http://localhost:8000/scatter_chart_MDC_PM';\n  axios.post(path).then(res => {\n    //console.log(res,\"response\");\n    for (const dataObj of JSON.parse(res.data)) {\n      let mdc = parseInt(dataObj.MDC_Message_Cnt);\n      let pm = parseInt(dataObj.MX_actions);\n      pmMessage.push({\n        \"x\": mdc,\n        \"y\": pm\n      });\n    } //console.log(mdcMessage);\n\n\n    setChartData2({\n      labels: pmMessage,\n      datasets: [{\n        label: \"Fleet Status- Last 7 days\",\n        data: pmMessage,\n        backgroundColor: \"#d8e4f0\",\n        borderWidth: 2,\n        borderColor: \"black\",\n        pointRadius: 5\n      }]\n    });\n  }).catch(err => {//console.log(err);\n  });\n  let aircraftno = [];\n  let ata_main = [];\n  let msg = [];\n  const path1 = 'http://127.0.0.1:8000/stackedbar_chart_MDCmessages';\n  axios.post(path1).then(res => {\n    //console.log(res,\"response\");\n    for (const dataObj of JSON.parse(res.data)) {\n      aircraftno.push(dataObj.aircraftno);\n      ata_main.push(parseInt(dataObj.ATA_main));\n      msg.push(dataObj.msg);\n    }\n\n    setChartData3({\n      labels: aircraftno,\n      datasets: [{\n        label: \"ata\",\n        data: ata_main,\n        backgroundColor: \"#d8e4f0\"\n      }]\n    });\n  }).catch(err => {//console.log(err);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Scatter, {\n            id: \"chart1\",\n            data: chartData2,\n            options: {\n              scales: {\n                xAxes: [{\n                  type: 'linear',\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of MDC Messages- Last 7 days',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  },\n                  position: 'bottom'\n                }],\n                yAxes: [{\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of MX Actions- Last 7 days',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  }\n                }],\n                title: {\n                  display: true,\n                  text: 'Scatter Plot',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(HorizontalBar, {\n            data: chartData3,\n            options: {\n              title: {\n                display: true,\n                text: 'ATA GRAPHS',\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                xAxes: [{\n                  stacked: true\n                }],\n                yAxes: [{\n                  stacked: true\n                }]\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart1, \"EFhFesAnfsMFH9xGIP5xFBFnPcA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chart1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart1\");","map":{"version":3,"sources":["C:/Users/raymi/Desktop/MHIRJ-chart/MHIRJ/src/Components/Home.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","Scatter","HorizontalBar","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Chart1","classes","ChartJsImage","require","chartData2","setChartData2","chartData3","setChartData3","pmMessage","path","post","then","res","dataObj","JSON","parse","data","mdc","parseInt","MDC_Message_Cnt","pm","MX_actions","push","labels","datasets","label","backgroundColor","borderWidth","borderColor","pointRadius","catch","err","aircraftno","ata_main","msg","path1","ATA_main","scales","xAxes","type","scaleLabel","display","labelString","fontStyle","fontColor","position","yAxes","title","fontSize","legend","stacked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,iBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,SAAS,EAAE;AAHP,GADiC;AAOvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBC,SAHrB;AAILC,IAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAc,GAAd,CAJF;AAKLO,IAAAA,MAAM,EAAEd,KAAK,CAACO,OAAN,CAAc,GAAd;AALH;AAPgC,CAAZ,CAAD,CAA5B;AAkBA,eAAe,SAASQ,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;;AACA,QAAMkB,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,EAAD,CAA5C;AAEA,MAAIgC,SAAS,GAAG,EAAhB;AAEA,QAAMC,IAAI,GAAG,4CAAb;AAEA1B,EAAAA,KAAK,CAAC2B,IAAN,CAAWD,IAAX,EACGE,IADH,CACQC,GAAG,IAAI;AACX;AAEA,SAAK,MAAMC,OAAX,IAAsBC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAtB,EAA4C;AAC1C,UAAIC,GAAG,GAAGC,QAAQ,CAACL,OAAO,CAACM,eAAT,CAAlB;AACA,UAAIC,EAAE,GAAGF,QAAQ,CAACL,OAAO,CAACQ,UAAT,CAAjB;AACAb,MAAAA,SAAS,CAACc,IAAV,CAAe;AAAE,aAAKL,GAAP;AAAY,aAAKG;AAAjB,OAAf;AAED,KARU,CASX;;;AACAf,IAAAA,aAAa,CAAC;AACZkB,MAAAA,MAAM,EAAEf,SADI;AAEZgB,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,2BADT;AAEET,QAAAA,IAAI,EAAER,SAFR;AAGEkB,QAAAA,eAAe,EAAE,SAHnB;AAIEC,QAAAA,WAAW,EAAE,CAJf;AAKEC,QAAAA,WAAW,EAAE,OALf;AAMEC,QAAAA,WAAW,EAAE;AANf,OADQ;AAFE,KAAD,CAAb;AAaD,GAxBH,EAyBGC,KAzBH,CAyBSC,GAAG,IAAI,CACZ;AACD,GA3BH;AA+BA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,GAAG,GAAG,EAAV;AAEA,QAAMC,KAAK,GAAG,oDAAd;AAEApD,EAAAA,KAAK,CAAC2B,IAAN,CAAWyB,KAAX,EACGxB,IADH,CACQC,GAAG,IAAI;AACX;AAEA,SAAK,MAAMC,OAAX,IAAsBC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAtB,EAA4C;AAC1CgB,MAAAA,UAAU,CAACV,IAAX,CAAgBT,OAAO,CAACmB,UAAxB;AACAC,MAAAA,QAAQ,CAACX,IAAT,CAAcJ,QAAQ,CAACL,OAAO,CAACuB,QAAT,CAAtB;AACAF,MAAAA,GAAG,CAACZ,IAAJ,CAAST,OAAO,CAACqB,GAAjB;AAED;;AACD3B,IAAAA,aAAa,CAAC;AACZgB,MAAAA,MAAM,EAAES,UADI;AAEZR,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,KADT;AAEET,QAAAA,IAAI,EAAEiB,QAFR;AAGEP,QAAAA,eAAe,EAAE;AAHnB,OADQ;AAFE,KAAD,CAAb;AAUD,GApBH,EAqBGI,KArBH,CAqBSC,GAAG,IAAI,CACZ;AACD,GAvBH;AA2BA,sBAEE;AAAK,IAAA,SAAS,EAAE9B,OAAO,CAACf,IAAxB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,EAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEe,OAAO,CAACX,KAA1B;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,IAAI,EAAEc,UAFR;AAGE,YAAA,OAAO,EAAE;AACPiC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAE,CAAC;AACNC,kBAAAA,IAAI,EAAE,QADA;AAENC,kBAAAA,UAAU,EAAE;AACVC,oBAAAA,OAAO,EAAE,IADC;AAEVC,oBAAAA,WAAW,EAAE,gCAFH;AAGVC,oBAAAA,SAAS,EAAE,MAHD;AAIVC,oBAAAA,SAAS,EAAE;AAJD,mBAFN;AAQNC,kBAAAA,QAAQ,EAAE;AARJ,iBAAD,CADD;AAWNC,gBAAAA,KAAK,EAAE,CAAC;AACNL,kBAAAA,OAAO,EAAE,IADH;AAEND,kBAAAA,UAAU,EAAE;AACVC,oBAAAA,OAAO,EAAE,IADC;AAEVC,oBAAAA,WAAW,EAAE,8BAFH;AAGVC,oBAAAA,SAAS,EAAE,MAHD;AAIVC,oBAAAA,SAAS,EAAE;AAJD;AAFN,iBAAD,CAXD;AAoBNG,gBAAAA,KAAK,EAAE;AAAEN,kBAAAA,OAAO,EAAE,IAAX;AAAiB7C,kBAAAA,IAAI,EAAE,cAAvB;AAAuCoD,kBAAAA,QAAQ,EAAE;AAAjD,iBApBD;AAqBNC,gBAAAA,MAAM,EAAE;AAAER,kBAAAA,OAAO,EAAE,IAAX;AAAiBI,kBAAAA,QAAQ,EAAE;AAA3B;AArBF;AADD;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAgCE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE5C,OAAO,CAACX,KAA1B;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,IAAI,EAAEgB,UADR;AAEE,YAAA,OAAO,EAAE;AACPyC,cAAAA,KAAK,EAAE;AACLN,gBAAAA,OAAO,EAAE,IADJ;AAEL7C,gBAAAA,IAAI,EAAE,YAFD;AAGLoD,gBAAAA,QAAQ,EAAE;AAHL,eADA;AAMPC,cAAAA,MAAM,EAAE;AACNR,gBAAAA,OAAO,EAAE,IADH;AAENI,gBAAAA,QAAQ,EAAE;AAFJ,eAND;AAUPR,cAAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAE,CAAC;AACNY,kBAAAA,OAAO,EAAE;AADH,iBAAD,CADD;AAINJ,gBAAAA,KAAK,EAAE,CAAC;AACNI,kBAAAA,OAAO,EAAE;AADH,iBAAD;AAJD;AAVD;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AA+DD;;GAzIuBlD,M;UACNhB,S;;;KADMgB,M","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Scatter, HorizontalBar } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    width: theme.spacing(185),\r\n    height: theme.spacing(120),\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function Chart1() {\r\n  const classes = useStyles();\r\n  const ChartJsImage = require('chartjs-to-image');\r\n  const [chartData2, setChartData2] = useState({});\r\n  const [chartData3, setChartData3] = useState({});\r\n\r\n  let pmMessage = [];\r\n\r\n  const path = 'http://localhost:8000/scatter_chart_MDC_PM'\r\n\r\n  axios.post(path)\r\n    .then(res => {\r\n      //console.log(res,\"response\");\r\n\r\n      for (const dataObj of JSON.parse(res.data)) {\r\n        let mdc = parseInt(dataObj.MDC_Message_Cnt)\r\n        let pm = parseInt(dataObj.MX_actions)\r\n        pmMessage.push({ \"x\": mdc, \"y\": pm })\r\n\r\n      }\r\n      //console.log(mdcMessage);\r\n      setChartData2({\r\n        labels: pmMessage,\r\n        datasets: [\r\n          {\r\n            label: \"Fleet Status- Last 7 days\",\r\n            data: pmMessage,\r\n            backgroundColor: \"#d8e4f0\",\r\n            borderWidth: 2,\r\n            borderColor: \"black\",\r\n            pointRadius: 5\r\n          }\r\n        ]\r\n      });\r\n    })\r\n    .catch(err => {\r\n      //console.log(err);\r\n    });\r\n\r\n\r\n\r\n  let aircraftno = [];\r\n  let ata_main = [];\r\n  let msg = [];\r\n\r\n  const path1 = 'http://127.0.0.1:8000/stackedbar_chart_MDCmessages'\r\n\r\n  axios.post(path1)\r\n    .then(res => {\r\n      //console.log(res,\"response\");\r\n\r\n      for (const dataObj of JSON.parse(res.data)) {\r\n        aircraftno.push(dataObj.aircraftno);\r\n        ata_main.push(parseInt(dataObj.ATA_main));\r\n        msg.push(dataObj.msg);\r\n\r\n      }\r\n      setChartData3({\r\n        labels: aircraftno,\r\n        datasets: [\r\n          {\r\n            label: \"ata\",\r\n            data: ata_main,\r\n            backgroundColor: \"#d8e4f0\"\r\n          }\r\n        ]\r\n      });\r\n    })\r\n    .catch(err => {\r\n      //console.log(err);\r\n    });\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Grid container spacing={12}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Scatter\r\n              id=\"chart1\"\r\n              data={chartData2}\r\n              options={{\r\n                scales: {\r\n                  xAxes: [{\r\n                    type: 'linear',\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: '# of MDC Messages- Last 7 days',\r\n                      fontStyle: 'bold',\r\n                      fontColor: '#001C3E'\r\n                    },\r\n                    position: 'bottom'\r\n                  }],\r\n                  yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: '# of MX Actions- Last 7 days',\r\n                      fontStyle: 'bold',\r\n                      fontColor: '#001C3E'\r\n                    }\r\n                  }],\r\n                  title: { display: true, text: 'Scatter Plot', fontSize: 20 },\r\n                  legend: { display: true, position: 'right' }\r\n                }\r\n              }}\r\n            />\r\n          </Paper>\r\n          <Paper className={classes.paper}>\r\n            <HorizontalBar\r\n              data={chartData3}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: 'ATA GRAPHS',\r\n                  fontSize: 20\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: 'right'\r\n                },\r\n                scales: {\r\n                  xAxes: [{\r\n                    stacked: true\r\n                  }],\r\n                  yAxes: [{\r\n                    stacked: true\r\n                  }]\r\n                }\r\n              }}\r\n            /></Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}