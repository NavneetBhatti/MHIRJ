{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymi\\\\Desktop\\\\MHIRJ-chart\\\\MHIRJ\\\\src\\\\Components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { HorizontalBar, Line, Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  root1: {\n    paddingTop: '30px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    paddingBottom: '60px',\n    marginLeft: '500px'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  label: {\n    // paddingTop: '20px',\n    fontSize: '22px',\n    fontWeight: 'bold',\n    PaddingBottom: '30px'\n  }\n}));\nconst state1 = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'june', 'july', 'August'],\n  datasets: [{\n    label: 'ATA DATASET1',\n    backgroundColor: '#d8e4f4',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 2,\n    data: [65, 59, 80, 81, 56, 21, 31, 41]\n  }, {\n    label: 'ATA DATASET2',\n    backgroundColor: \"#416d97\",\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 2,\n    data: [60, 50, 85, 90, 58, 24, 34, 44]\n  }, {\n    label: 'ATA DATASET3',\n    backgroundColor: '#001C3E',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 2,\n    data: [61, 51, 81, 71, 91, 28, 39, 48]\n  }]\n}; // const state = {\n//   labels: ['January', 'February', 'March',\n//     'April', 'May'],\n//   datasets: [{\n//     label: ' Dataset',\n//     data: [{\n//       x: -10,\n//       y: 0\n//     },{\n//       x: 0,\n//       y: 10\n//     },{\n//       x: 10,\n//       y: 5\n//     }, {\n//       x: 4,\n//       y: 8\n//     },{\n//       x: 3,\n//       y: 9\n//     }\n//     ],\n//     backgroundColor: '#001C3E',\n//     pointRadius: 8\n//   },\n//   {\n//     label: ' Dataset2',\n//     data: [{\n//       x: -11,\n//       y: 3\n//     },{\n//       x: 5,\n//       y: 12\n//     },{\n//       x: 9,\n//       y: 4\n//     }, {\n//       x: 2,\n//       y: 9\n//     },{\n//       x: 2,\n//       y: 12\n//     }\n//     ],\n//     backgroundColor: '#416d97',\n//     pointRadius: 8\n//   },\n//   {\n//     label: ' Dataset2',\n//     data: [{\n//       x: -11,\n//       y: 3\n//     },{\n//       x: -5,\n//       y: 12\n//     },{\n//       x: -9,\n//       y: 4\n//     }, {\n//       x: 2,\n//       y: 9\n//     },{\n//       x: -2,\n//       y: 12\n//     }\n//     ],\n//     backgroundColor: '#d8e4f4',\n//     pointRadius: 8\n//   },\n//   {\n//     label: ' Dataset2',\n//     data: [{\n//       x: -15,\n//       y: 3\n//     },{\n//       x: 2,\n//       y: 8\n//     },{\n//       x: -10,\n//       y: 4\n//     }, {\n//       x: -5,\n//       y: 9\n//     },{\n//       x: -2,\n//       y: 12\n//     }\n//     ],\n//     backgroundColor: '#416d97',\n//     pointRadius: 8\n//   }\n// ],\n//   options: {\n//     scales: {\n//       xAxes: [{\n//         type: 'linear',\n//         position: 'bottom'\n//       }]\n//     }\n//   }\n// }\n\nexport default function Home() {\n  _s();\n\n  const classes = useStyles(); //const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n  const [data_chart1, setData_chart1] = useState({\n    select_date: \"\"\n  }); //  function save(e) {\n  //     //save to png\n  //     const canvasSave = document.getElementById('chart1');\n  //     canvasSave.toBlob(function (blob) {\n  //         saveAs(blob, \"Chart1.png\")\n  //     })\n  // }\n\n  function submit(e) {\n    e.preventDefault();\n    let mdcMessage = [];\n    let pmMessage = [];\n    const path1 = 'http://localhost:8000/Landing_Chart_MDC_Scatter/' + data_chart1.select_date;\n    const path2 = 'http://localhost:8000/Landing_Chart_PM_Scatter/' + data_chart1.select_date;\n    const req1 = axios.post(path1);\n    const req2 = axios.post(path2);\n    axios.all([req1, req2]).then(axios.spread((...responses) => {\n      const responseOne = responses[0] + responses[1];\n      console.log(responseOne);\n\n      for (const dataObj of JSON.parse(responseOne.data)) {\n        mdcMessage.push(dataObj.of_MDC_Messages);\n        pmMessage.push(parseInt(dataObj.of_MX_Actions));\n      }\n\n      setChartData1({\n        labels: msgName,\n        datasets: [{\n          label: pmMessage,\n          data: mdcMessage\n        }]\n      });\n    }).catch(err => {}));\n  }\n\n  function handle(e) {\n    const newdata = { ...data_chart1\n    };\n    newdata[e.target.id] = e.target.value;\n    setData_chart1(newdata); //console.log(newdata)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              value: data_chart1.select_date,\n              id: \"select_date\",\n              label: \" SELECT DATE \",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => submit(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \"GENERATE  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => save(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Scatter, {\n            data: state,\n            options: {\n              title: {\n                display: true,\n                text: 'ATA GRAPHS',\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"top_value\",\n              label: \"Top Values\",\n              defaultValue: \" \",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"from_date\",\n              label: \" SELECT FROM DATE \\xA0 \\xA0\",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"to_date\",\n              label: \" SELECT TO DATE \",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \"GENERATE  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(HorizontalBar, {\n            data: state1,\n            options: {\n              title: {\n                display: true,\n                text: 'ATA GRAPHS',\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                xAxes: [{\n                  stacked: true\n                }],\n                yAxes: [{\n                  stacked: true\n                }]\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"v6SY5ZAJ4YYu6dKZF33dTdPfj5g=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/raymi/Desktop/MHIRJ-chart/MHIRJ/src/Components/Home.js"],"names":["React","useState","useEffect","makeStyles","Paper","Typography","Grid","HorizontalBar","Line","Scatter","TextField","Button","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","root1","paddingTop","paper","padding","spacing","textAlign","color","palette","text","secondary","container","display","flexWrap","alignContent","paddingBottom","textField","marginRight","width","label","fontSize","fontWeight","PaddingBottom","state1","labels","datasets","backgroundColor","borderColor","borderWidth","data","Home","classes","chartData1","setChartData1","data_chart1","setData_chart1","select_date","submit","e","preventDefault","mdcMessage","pmMessage","path1","path2","req1","post","req2","all","then","spread","responses","responseOne","console","log","dataObj","JSON","parse","push","of_MDC_Messages","parseInt","of_MX_Actions","msgName","catch","err","handle","newdata","target","id","value","shrink","save","float","state","title","legend","position","scales","xAxes","stacked","yAxes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { HorizontalBar, Line, Scatter } from 'react-chartjs-2';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: '25px',\r\n    marginTop: '25px',\r\n  },\r\n  root1: {\r\n    paddingTop: '30px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignContent: 'center',\r\n    paddingBottom: '60px',\r\n    marginLeft: '500px',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  label: {\r\n    // paddingTop: '20px',\r\n    fontSize: '22px',\r\n    fontWeight: 'bold',\r\n    PaddingBottom: '30px',\r\n\r\n\r\n  },\r\n}));\r\nconst state1 = {\r\n  labels: ['January', 'February', 'March',\r\n    'April', 'May', 'june', 'july', 'August'],\r\n  datasets: [\r\n    {\r\n      label: 'ATA DATASET1',\r\n      backgroundColor: '#d8e4f4',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56, 21, 31, 41]\r\n    },\r\n    {\r\n      label: 'ATA DATASET2',\r\n      backgroundColor: \"#416d97\",\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [60, 50, 85, 90, 58, 24, 34, 44]\r\n    },\r\n    {\r\n      label: 'ATA DATASET3',\r\n      backgroundColor: '#001C3E',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [61, 51, 81, 71, 91, 28, 39, 48]\r\n    },\r\n\r\n  ]\r\n}\r\n\r\n\r\n\r\n// const state = {\r\n//   labels: ['January', 'February', 'March',\r\n//     'April', 'May'],\r\n \r\n//   datasets: [{\r\n//     label: ' Dataset',\r\n//     data: [{\r\n//       x: -10,\r\n//       y: 0\r\n//     },{\r\n//       x: 0,\r\n//       y: 10\r\n//     },{\r\n//       x: 10,\r\n//       y: 5\r\n//     }, {\r\n//       x: 4,\r\n//       y: 8\r\n//     },{\r\n//       x: 3,\r\n//       y: 9\r\n//     }\r\n//     ],\r\n//     backgroundColor: '#001C3E',\r\n//     pointRadius: 8\r\n//   },\r\n//   {\r\n//     label: ' Dataset2',\r\n//     data: [{\r\n//       x: -11,\r\n//       y: 3\r\n//     },{\r\n//       x: 5,\r\n//       y: 12\r\n//     },{\r\n//       x: 9,\r\n//       y: 4\r\n//     }, {\r\n//       x: 2,\r\n//       y: 9\r\n//     },{\r\n//       x: 2,\r\n//       y: 12\r\n//     }\r\n//     ],\r\n//     backgroundColor: '#416d97',\r\n//     pointRadius: 8\r\n//   },\r\n//   {\r\n//     label: ' Dataset2',\r\n//     data: [{\r\n//       x: -11,\r\n//       y: 3\r\n//     },{\r\n//       x: -5,\r\n//       y: 12\r\n//     },{\r\n//       x: -9,\r\n//       y: 4\r\n//     }, {\r\n//       x: 2,\r\n//       y: 9\r\n//     },{\r\n//       x: -2,\r\n//       y: 12\r\n//     }\r\n//     ],\r\n//     backgroundColor: '#d8e4f4',\r\n//     pointRadius: 8\r\n//   },\r\n//   {\r\n//     label: ' Dataset2',\r\n//     data: [{\r\n//       x: -15,\r\n//       y: 3\r\n//     },{\r\n//       x: 2,\r\n//       y: 8\r\n//     },{\r\n//       x: -10,\r\n//       y: 4\r\n//     }, {\r\n//       x: -5,\r\n//       y: 9\r\n//     },{\r\n//       x: -2,\r\n//       y: 12\r\n//     }\r\n//     ],\r\n//     backgroundColor: '#416d97',\r\n//     pointRadius: 8\r\n//   }\r\n\r\n// ],\r\n//   options: {\r\n//     scales: {\r\n//       xAxes: [{\r\n//         type: 'linear',\r\n//         position: 'bottom'\r\n//       }]\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  \r\n  //const ChartJsImage = require('chartjs-to-image');\r\n  const [chartData1, setChartData1] = useState({});\r\n\r\n \r\n \r\n  const [data_chart1, setData_chart1] = useState({\r\n    select_date:\"\"\r\n  });\r\n\r\n//  function save(e) {\r\n//     //save to png\r\n//     const canvasSave = document.getElementById('chart1');\r\n//     canvasSave.toBlob(function (blob) {\r\n//         saveAs(blob, \"Chart1.png\")\r\n//     })\r\n// }\r\n\r\n\r\n  function submit(e){\r\n    e.preventDefault();\r\n    let mdcMessage = [];\r\n    let pmMessage = [];\r\n  \r\n    const path1='http://localhost:8000/Landing_Chart_MDC_Scatter/' +data_chart1.select_date ;\r\n    const path2='http://localhost:8000/Landing_Chart_PM_Scatter/' +data_chart1.select_date ;\r\n    \r\n    const req1 = axios.post(path1);\r\n    const req2 = axios.post(path2);\r\n  \r\n    axios.all([ req1,req2])\r\n      .then(axios.spread((...responses) => {\r\n        const responseOne = responses[0] + responses[1];\r\n       console.log(responseOne);\r\n        for (const dataObj of JSON.parse(responseOne.data)) {\r\n          mdcMessage.push(dataObj.of_MDC_Messages);\r\n          pmMessage.push(parseInt(dataObj.of_MX_Actions));\r\n        }\r\n        setChartData1({\r\n          labels: msgName,\r\n          datasets: [\r\n            {\r\n              label: pmMessage,\r\n              data: mdcMessage,\r\n              \r\n            }\r\n          ]\r\n        });\r\n      })\r\n      .catch(err => {\r\n       \r\n      }));\r\n  \r\n  }\r\n\r\n  function handle(e){\r\n    const newdata={...data_chart1}\r\n    newdata[e.target.id] = e.target.value\r\n    setData_chart1(newdata)\r\n    //console.log(newdata)\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n\r\n          <form className={classes.root1} noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField  onChange= {(e)=>handle(e)} value={data_chart1.select_date} id=\"select_date\" label=\" SELECT DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\r\n            <br></br>\r\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\r\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\r\n          </form>\r\n          <Paper className={classes.paper}><Scatter\r\n            data={state}\r\n            options={{\r\n              title: { display: true, text: 'ATA GRAPHS', fontSize: 20 },\r\n              legend: { display: true, position: 'right' }\r\n            }}\r\n          /></Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <form className={classes.root1} noValidate autoComplete=\"off\">\r\n            <div> <TextField id=\"top_value\" label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\r\n            <br></br>\r\n            <div>  <TextField id=\"from_date\" label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\r\n              <TextField id=\"to_date\" label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\r\n            <br></br>\r\n            <div style={{ paddingBottom: \"20px\" }}><Button variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\r\n              <Button variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\r\n          </form>\r\n\r\n          <Paper className={classes.paper}><HorizontalBar\r\n            data={state1}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'ATA GRAPHS',\r\n                fontSize: 20\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: 'right'\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  stacked: true\r\n                }],\r\n                yAxes: [{\r\n                  stacked: true\r\n                }]\r\n              }\r\n            }}\r\n          /></Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}